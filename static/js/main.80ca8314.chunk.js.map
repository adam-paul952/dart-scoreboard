{"version":3,"sources":["reportWebVitals.js","util/useLocalStorage.js","contexts/Provider.js","contexts/Toggler.js","components/X01OutChart.js","util/useSessionStorage.js","util/useStatsAPI.js","screens/dashboard/AllPlayerStats.js","components/Header.js","contexts/PingProvider.js","util/useUserAPI.js","App.js","util/useUndoRedo.js","util/useGame.js","screens/CreatePlayer.js","screens/CreateGame.js","components/UndoRedo.js","components/CricketScoreCalculator.js","components/ScoreBoard.js","screens/games/Cricket.js","components/ScoreCalculator.js","screens/games/Baseball.js","components/X01ScoreCalculator.js","screens/games/X01.js","components/EliminationScoreCalculator.js","screens/games/Elimination.js","screens/games/Killer.js","screens/games/Rules.js","screens/dashboard/LogIn.js","screens/dashboard/Register.js","screens/dashboard/CreatePlayerDashboard.js","screens/dashboard/CreateGameDashboard.js","screens/dashboard/EditPlayer.js","screens/dashboard/SinglePlayerStats.js","screens/dashboard/ShowPlayersFromDB.js","util/usePlayerAPI.js","screens/dashboard/Dashboard.js","screens/dashboard/EditUser.js","screens/dashboard/DeleteUser.js","Routes.js","contexts/theme.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","setItem","stringify","ThemeContext","createContext","ThemeProvider","children","theme","setTheme","useEffect","localTheme","Provider","Toggle","useContext","oppositeTheme","Button","style","width","variant","onClick","fontSize","X01OutShotChart","Table","striped","bordered","hover","X01OutShotScore","Object","keys","possibleOutShots","map","index","join","X01OutShotButton","show","setShow","size","Modal","fullscreen","onHide","Header","closeButton","Title","Body","displaySessionUsername","sessionStorage","displaySessionUserUuidToken","useSessionStorage","defaultValue","err","URL","process","useStatsAPI","allPlayerStats","setAllPlayerStats","singlePlayerStats","setSinglePlayerStats","createStatRowWithPlayer","playerId","axios","post","res","data","message","catch","getStatsForAllPlayers","userId","get","getStatsForSinglePlayer","player","updateAllPlayerStats","put","updateWinningPlayerStats","DisplayAllPlayerStatsButton","color","Row","Col","playerName","id","gamesPlayed","gamesWon","winPercentage","title","goBackButton","resetButton","resetScoreList","switchThemeButton","outShotButton","loginDropDown","username","history","useHistory","themeToggle","Container","Navbar","className","goBack","Brand","handleLogout","clear","onclick","HeaderDropDownMenu","DropdownButton","menuVariant","Dropdown","Item","href","Divider","PingContext","PingProvider","ping","setPing","useUserAPI","isLoggedIn","setIsLoggedIn","setSessionUuidToken","createUser","password","loginUser","uuid","toString","alert","updateUserById","userUuid","deleteUserById","delete","params","getPingFromServer","timeout","StyledLink","styled","Link","StyledButton","App","setTimeout","to","reducer","state","action","past","present","future","type","newPresent","length","previous","slice","next","newFuture","useUndoRedo","initialState","useReducer","dispatch","canUndo","canRedo","undo","useCallback","redo","set","useGame","playerList","setPlayerList","turn","setTurn","currentPlayer","setCurrentPlayer","x01Points","setX01Points","checkedPlayerList","setCheckedPlayerList","disabledButtons","playerListHistory","addPlayer","deletePlayer","rowNumber","updatedRows","splice","changeTurns","getCurrentPlayer","x01GameSelect","assignX01PlayerScore","playerScore","i","score","scoreList","push","parseInt","assignPlayerLives","playerLives","numberOfPlayerLives","lives","Number","newScoreList","hitCount","highScore","getCurrentPlayerByName","getCurrentPlayerById","shufflePlayerList","array","randomIndex","currentIndex","Math","floor","random","PlayerList","removeRow","CreatePlayerList","playerObject","setPlayerObject","onKeyUp","e","preventDefault","onAddPlayer","document","addEventListener","removeEventListener","fluid","name","placeholder","onChange","target","as","disabled","CreateGame","Menu","eventKey","X01GameSelection","onSelect","game","KillerSetUp","EliminationSetUp","setPlayerLives","numOfLives","UndoRedo","setDisable","disable","newPlayer","newTurn","handleUndo","handleRedo","getCalculatorKeys","CricketScoreCalculatorKey","props","ButtonGroup","keyValue","CricketScoreCalculator","playerScoreList","setPlayerScoreList","targets","handleInput","number","handleScoreChange","changeTurnValidate","nowCurrentPlayer","forEach","changeTurn","calculatePlayerScore","declareWinner","newScoreArray","filter","hitNum","every","mark","countedScore","newScore","reduce","a","b","winner","Alert","fontWeight","onMouseDown","blur","inningNumber","cricketNumbers","eliminationHeader","killerHeader","TableHeader","inning","PlayerData","currentPlayerById","Error","X01PlayerData","CricketPlayerData","hitTargets","hitTarget","CricketScoreboardDisplay","BaseballPlayerData","sum","current","EliminationPlayerData","KillerPlayerData","borderColor","DisplayCurrentRoundInformation","Scoreboard","Cricket","ScoreCalculatorKey","ScoreCalculator","round","setRound","setPlayerScore","deleteInput","isNaN","changeNumberOfRounds","eraseGameData","totalRounds","winnerScore","totalScore","Baseball","X01ScoreCalculator","playerScoreReduced","X01","EliminationScoreCalculatorKey","EliminationScoreCalculator","prevPlayerScore","setPrevPlayerScore","playerIsOut","setPlayerIsOut","Set","Elimination","Killer","X01Rules","BaseBallRules","CricketRules","EliminationRules","KillerRules","Rules","Accordion","LoginUser","setSessionUsername","setUsername","setPassword","setAlert","Form","onSubmit","Group","controlId","Label","Control","UserRegistration","passwordConfirm","setPasswordConfirm","noPasswordMatch","CreatePlayerDashboard","setPlayerName","createPlayer","getPlayerByUserId","onCreate","CreateGameDashboard","setUserPlayerList","newArray","shufflePlayerArray","EditPlayerName","isEditable","status","rowKey","EditPlayerButton","setEditable","updatePlayerById","onSave","users_id","onEdit","currentPlayerName","DisplaySinglePlayerStats","playerid","dashboardTableHeader","SelectPlayersFromDB","userPlayerList","deletePlayerById","ShowDatabasePlayerList","Check","checked","onPlayerCheckbox","removePlayer","usePlayerAPI","applyDatabasePlayers","getPlayerByName","Dashboard","EditUserInfo","userCredentials","setUserCredentials","currentUserPassword","setCurrentUserPassword","handleSubmit","checkUserCredentials","DeleteUser","handleDelete","Routes","basename","exact","path","component","themes","dark","body","text","toggleBorder","gradient","light","GlobalStyle","createGlobalStyle","Theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.80ca8314.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useEffect, createContext } from \"react\";\r\nimport useLocalStorage from \"../util/useLocalStorage\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"light\");\r\n\r\n  useEffect(() => {\r\n    const localTheme = JSON.parse(localStorage.getItem(\"theme\"));\r\n    localTheme && setTheme(localTheme);\r\n  }, [theme, setTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        setTheme: () => setTheme(theme === \"dark\" ? \"light\" : \"dark\"),\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nThemeProvider.propTypes = { children: PropTypes.element };\r\n\r\nexport { ThemeProvider, ThemeContext };\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { ThemeContext } from \"./Provider\";\r\nimport { BsFillBrightnessHighFill } from \"react-icons/bs\";\r\nimport { FaMoon } from \"react-icons/fa\";\r\n\r\nconst Toggle = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n  const oppositeTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n  return (\r\n    <Button\r\n      style={{ width: \"150px\" }}\r\n      variant={oppositeTheme}\r\n      onClick={setTheme}\r\n    >\r\n      {theme === \"light\" ? (\r\n        <BsFillBrightnessHighFill style={{ fontSize: \"1.5rem\" }} />\r\n      ) : (\r\n        <FaMoon style={{ fontSize: \"1.25rem\" }} />\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  theme: PropTypes.string,\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button, Table, Modal } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\n\r\nconst X01OutShotButton = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          setShow(true);\r\n        }}\r\n      >\r\n        Outshots\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        fullscreen={true}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>OutChart</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <X01OutShotChart />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst X01OutShotChart = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const oppositeTheme = theme === \"light\" ? \"light\" : \"dark\";\r\n  return (\r\n    <>\r\n      <Table variant={oppositeTheme} striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Score</th>\r\n            <th>Outshot Available</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <X01OutShotScore />\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst X01OutShotScore = () => {\r\n  return (\r\n    <>\r\n      {/* {outShotScore.map((value, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{value}</td>\r\n            <td>{outShotItems[index].join(\" -- \")}</td>\r\n          </tr>\r\n        );\r\n      })} */}\r\n      {Object.keys(possibleOutShots).map((value, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{value}</td>\r\n            <td>{possibleOutShots[value].join(\" -- \")}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default X01OutShotButton;\r\n\r\nconst possibleOutShots = {\r\n  170: [\"T20\", \"T20\", \"Bull\"],\r\n  169: [\"T20\", \"T19\", \"Bull\"],\r\n  164: [\"T20\", \"T18\", \"Bull\"],\r\n  161: [\"T20\", \"T17\", \"Bull\"],\r\n  160: [\"T20\", \"T20\", \"D20\"],\r\n  158: [\"T20\", \"T20\", \"D19\"],\r\n  157: [\"T20\", \"T19\", \"D20\"],\r\n  156: [\"T20\", \"T20\", \"D18\"],\r\n  155: [\"T20\", \"T19\", \"D19\"],\r\n  154: [\"T20\", \"T18\", \"D20\"],\r\n  153: [\"T20\", \"T19\", \"D18\"],\r\n  152: [\"T20\", \"T20\", \"D16\"],\r\n  151: [\"T20\", \"T17\", \"D20\"],\r\n  150: [\"T20\", \"T18\", \"D18\"],\r\n  149: [\"T20\", \"T19\", \"D16\"],\r\n  148: [\"T20\", \"T16\", \"D20\"],\r\n  147: [\"T20\", \"T17\", \"D18\"],\r\n  146: [\"T20\", \"T18\", \"D16\"],\r\n  145: [\"T20\", \"T15\", \"D20\"],\r\n  144: [\"T20\", \"T20\", \"D12\"],\r\n  143: [\"T20\", \"T17\", \"D16\"],\r\n  142: [\"T20\", \"T14\", \"D20\"],\r\n  141: [\"T20\", \"T15\", \"D18\"],\r\n  140: [\"T20\", \"T16\", \"D16\"],\r\n  139: [\"T20\", \"T13\", \"D20\"],\r\n  138: [\"T20\", \"T14\", \"D18\"],\r\n  137: [\"T17\", \"T18\", \"D16\"],\r\n  136: [\"T20\", \"T20\", \"D8\"],\r\n  135: [\"T20\", \"T15\", \"D15\"],\r\n  134: [\"T20\", \"T14\", \"D16\"],\r\n  133: [\"T20\", \"T19\", \"D8\"],\r\n  132: [\"T20\", \"T20\", \"D6\"],\r\n  131: [\"T20\", \"T13\", \"D16\"],\r\n  130: [\"T20\", \"T18\", \"D8\"],\r\n  129: [\"T19\", \"T20\", \"D6\"],\r\n  128: [\"T18\", \"T14\", \"D16\"],\r\n  127: [\"T19\", \"T18\", \"D8\"],\r\n  126: [\"T20\", \"T16\", \"D8\"],\r\n  125: [\"Bull\", \"T20\", \"D20\"],\r\n  124: [\"T20\", \"D16\", \"D16\"],\r\n  123: [\"T19\", \"T16\", \"D8\"],\r\n  122: [\"T18\", \"T20\", \"D4\"],\r\n  121: [\"T20\", \"T15\", \"D8\"],\r\n  120: [\"T20\", \"20\", \"D20\"],\r\n  119: [\"T19\", \"T10\", \"D16\"],\r\n  118: [\"T20\", \"18\", \"D20\"],\r\n  117: [\"T20\", \"17\", \"D20\"],\r\n  116: [\"T20\", \"16\", \"D20\"],\r\n  115: [\"T20\", \"15\", \"D20\"],\r\n  114: [\"T20\", \"14\", \"D20\"],\r\n  113: [\"T20\", \"13\", \"D20\"],\r\n  112: [\"T20\", \"20\", \"D16\"],\r\n  111: [\"T20\", \"19\", \"D16\"],\r\n  110: [\"T20\", \"18\", \"D16\"],\r\n  109: [\"T20\", \"17\", \"D16\"],\r\n  108: [\"T20\", \"16\", \"D16\"],\r\n  107: [\"T19\", \"18\", \"D16\"],\r\n  106: [\"T20\", \"14\", \"D16\"],\r\n  105: [\"T20\", \"13\", \"D16\"],\r\n  104: [\"T18\", \"18\", \"D16\"],\r\n  103: [\"T20\", \"11\", \"D16\"],\r\n  102: [\"T20\", \"10\", \"D16\"],\r\n  101: [\"T17\", \"18\", \"D16\"],\r\n  100: [\"T20\", \"D20\"],\r\n  99: [\"T19\", \"10\", \"D16\"],\r\n  98: [\"T20\", \"D19\"],\r\n  97: [\"T19\", \"D20\"],\r\n  96: [\"T20\", \"D18\"],\r\n  95: [\r\n    [\"T15\", \"18\", \"D16\"],\r\n    [\"T19\", \"D19\"],\r\n  ],\r\n  94: [\"T18\", \"D20\"],\r\n  93: [\"T19\", \"D18\"],\r\n  92: [\"T20\", \"D16\"],\r\n  91: [\"T17\", \"D20\"],\r\n  90: [\"T18\", \"D18\"],\r\n  89: [\"T19\", \"D16\"],\r\n  88: [\"T16\", \"D20\"],\r\n  87: [\"T17\", \"D18\"],\r\n  86: [\"T18\", \"D16\"],\r\n  85: [\"T15\", \"D20\"],\r\n  84: [\r\n    [\"T20\", \"D12\"],\r\n    [\"T16\", \"D18\"],\r\n  ],\r\n  83: [\"T17\", \"D16\"],\r\n  82: [\r\n    [\"T14\", \"D20\"],\r\n    [\"Bull\", \"D16\"],\r\n  ],\r\n  81: [\"T15\", \"D18\"],\r\n  80: [\"T16\", \"D16\"],\r\n  79: [\"T13\", \"D20\"],\r\n  78: [\"T14\", \"D18\"],\r\n  77: [\"T15\", \"D16\"],\r\n  76: [\"T20\", \"D8\"],\r\n  75: [\"T15\", \"D15\"],\r\n  74: [\"T14\", \"D16\"],\r\n  73: [\"T19\", \"D8\"],\r\n  72: [\"T20\", \"D6\"],\r\n  71: [\"T13\", \"D16\"],\r\n  70: [\"T18\", \"D8\"],\r\n  69: [\"T19\", \"D6\"],\r\n  68: [\r\n    [\"T16\", \"D10\"],\r\n    [\"T20\", \"D4\"],\r\n  ],\r\n  67: [\"T17\", \"D8\"],\r\n  66: [\"T10\", \"D18\"],\r\n  65: [\r\n    [\"T15\", \"D10\"],\r\n    [\"T11\", \"D16\"],\r\n  ],\r\n  64: [\r\n    [\"D16\", \"D16\"],\r\n    [\"T16\", \"D8\"],\r\n  ],\r\n  63: [\"T13\", \"D12\"],\r\n  62: [\"T10\", \"D16\"],\r\n  61: [\"T15\", \"D8\"],\r\n  60: [\"20\", \"D20\"],\r\n  59: [\"19\", \"D20\"],\r\n  58: [\"18\", \"D20\"],\r\n  57: [\"17\", \"D20\"],\r\n  56: [\"16\", \"D20\"],\r\n  55: [\"15\", \"D20\"],\r\n  54: [\"14\", \"D20\"],\r\n  53: [\"13\", \"D20\"],\r\n  52: [\"20\", \"D16\"],\r\n  51: [\"19\", \"D16\"],\r\n  50: [\"18\", \"D16\"],\r\n  49: [\"17\", \"D16\"],\r\n  48: [\"16\", \"D16\"],\r\n  47: [\"15\", \"D16\"],\r\n  46: [\"14\", \"D16\"],\r\n  45: [\"13\", \"D16\"],\r\n  44: [\"12\", \"D16\"],\r\n  43: [\"11\", \"D16\"],\r\n  42: [\"10\", \"D16\"],\r\n  41: [\"9\", \"D16\"],\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useSessionStorage = (key, defaultValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = sessionStorage.getItem(key);\r\n      return item ? JSON.parse(item) : defaultValue;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return defaultValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport const displaySessionUsername = () => {\r\n  const usernameToken = JSON.parse(sessionStorage.getItem(\"username\"));\r\n  return usernameToken;\r\n};\r\n\r\nexport const displaySessionUserUuidToken = () => {\r\n  const userIdToken = JSON.parse(sessionStorage.getItem(\"userUuid\"));\r\n  return userIdToken;\r\n};\r\n\r\nexport default useSessionStorage;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst URL = process.env.REACT_APP_STATS_URL;\r\n\r\nconst useStatsAPI = () => {\r\n  const createStatRowWithPlayer = (playerId) => {\r\n    axios\r\n      .post(`${URL}${playerId}`)\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const [allPlayerStats, setAllPlayerStats] = useState([]);\r\n\r\n  const getStatsForAllPlayers = (userId) => {\r\n    axios\r\n      .get(`${URL}byUser/${userId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setAllPlayerStats(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const [singlePlayerStats, setSinglePlayerStats] = useState([]);\r\n\r\n  const getStatsForSinglePlayer = (playerId) => {\r\n    axios\r\n      .get(`${URL}byPlayer/${playerId}`)\r\n      .then((res) => {\r\n        let player = res.data[0];\r\n        console.log(player);\r\n        setSinglePlayerStats(player);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const updateAllPlayerStats = () => {\r\n    axios\r\n      .put(URL)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const updateWinningPlayerStats = (playerId) => {\r\n    axios\r\n      .put(`${URL}${playerId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  return {\r\n    createStatRowWithPlayer,\r\n    getStatsForAllPlayers,\r\n    getStatsForSinglePlayer,\r\n    updateAllPlayerStats,\r\n    updateWinningPlayerStats,\r\n    singlePlayerStats,\r\n    setAllPlayerStats,\r\n    allPlayerStats,\r\n  };\r\n};\r\n\r\nexport default useStatsAPI;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\r\nimport { displaySessionUserUuidToken } from \"../../util/useSessionStorage\";\r\nimport useStatsAPI from \"../../util/useStatsAPI\";\r\n\r\nconst DisplayAllPlayerStatsButton = () => {\r\n  const userId = displaySessionUserUuidToken();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { getStatsForAllPlayers, allPlayerStats } = useStatsAPI();\r\n\r\n  const onFindAllStats = () => {\r\n    getStatsForAllPlayers(userId);\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          onFindAllStats();\r\n        }}\r\n      >\r\n        All Player Stats\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n        style={{ color: \"black\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>All Stats</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>Player Name</Col>\r\n            <Col>Games Played</Col>\r\n            <Col>Games Won</Col>\r\n            <Col>Win Percentage</Col>\r\n          </Row>\r\n          {allPlayerStats.map((player) => {\r\n            return (\r\n              <>\r\n                <Row key={player.id}>\r\n                  <Col key={player.id}>{player.playerName}</Col>\r\n                  <Col key={player.id}>{player.gamesPlayed}</Col>\r\n                  <Col key={player.id}>{player.gamesWon}</Col>\r\n                  <Col key={player.id}>{player.winPercentage}</Col>\r\n                </Row>\r\n              </>\r\n            );\r\n          })}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayAllPlayerStatsButton;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Navbar,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport { BsSkipBackward } from \"react-icons/bs\";\r\n\r\nimport Toggle from \"../contexts/Toggler\";\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\nimport X01OutShotButton from \"./X01OutChart\";\r\nimport DisplayAllPlayerStatsButton from \"../screens/dashboard/AllPlayerStats\";\r\n\r\nconst Header = ({\r\n  title,\r\n  goBackButton,\r\n  resetButton,\r\n  resetScoreList,\r\n  switchThemeButton,\r\n  outShotButton,\r\n  loginDropDown,\r\n  username,\r\n}) => {\r\n  const history = useHistory();\r\n  const { theme, themeToggle } = useContext(ThemeContext);\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Navbar variant={theme} className=\"my-5 justify-content-between\">\r\n          {goBackButton && (\r\n            <Button\r\n              onClick={() => history.goBack()}\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n            >\r\n              <BsSkipBackward />\r\n              Go back\r\n            </Button>\r\n          )}\r\n          <Navbar.Brand>{title}</Navbar.Brand>\r\n          {outShotButton && <X01OutShotButton />}\r\n          {loginDropDown && (\r\n            <HeaderDropDownMenu\r\n              handleLogout={handleLogout}\r\n              theme={theme}\r\n              themeToggle={themeToggle}\r\n              username={username}\r\n            />\r\n          )}\r\n          {resetButton && (\r\n            <Button\r\n              onClick={() => resetScoreList()}\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n            >\r\n              Reset Game\r\n            </Button>\r\n          )}\r\n          {switchThemeButton && <Toggle theme={theme} onclick={themeToggle} />}\r\n        </Navbar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  goBackButton: PropTypes.bool,\r\n  resetButton: PropTypes.bool,\r\n  resetScoreList: PropTypes.func,\r\n  switchThemeButton: PropTypes.bool,\r\n  outShotButton: PropTypes.bool,\r\n  loginDropDown: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n\r\nconst HeaderDropDownMenu = ({ handleLogout, theme, themeToggle, username }) => {\r\n  return (\r\n    <>\r\n      <DropdownButton className=\"px-3\" title={username} menuVariant={theme}>\r\n        <Dropdown.Item>\r\n          <DisplayAllPlayerStatsButton />\r\n        </Dropdown.Item>\r\n        <Dropdown.Item href=\"/user/edit\">Edit User</Dropdown.Item>\r\n        <Dropdown.Item href=\"/user/delete\">Delete User</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item href=\"/game/login\" onClick={handleLogout}>\r\n          LogOut\r\n        </Dropdown.Item>\r\n        <Dropdown.Item>\r\n          <Toggle theme={theme} onclick={themeToggle} />\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nHeaderDropDownMenu.propTypes = {\r\n  handleLogout: PropTypes.func,\r\n  theme: PropTypes.string,\r\n  themeToggle: PropTypes.func,\r\n  username: PropTypes.string,\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PingContext = createContext();\r\n\r\nconst PingProvider = ({ children }) => {\r\n  const [ping, setPing] = useState(null);\r\n\r\n  return (\r\n    <PingContext.Provider value={{ ping, setPing }}>\r\n      {children}\r\n    </PingContext.Provider>\r\n  );\r\n};\r\n\r\nPingProvider.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport { PingProvider, PingContext };\r\n","import axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { PingContext } from \"../contexts/PingProvider\";\r\n\r\nimport useSessionStorage from \"./useSessionStorage\";\r\n\r\nconst URL = process.env.REACT_APP_USER_URL;\r\n\r\nconst useUserAPI = () => {\r\n  const { setPing } = useContext(PingContext);\r\n\r\n  const createUser = ({ username, password }) => {\r\n    axios\r\n      .post(URL, { username, password })\r\n      .then((res) => {\r\n        setIsLoggedIn(true);\r\n        console.log(`Successfully created user: ${res.data.username}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [, setSessionUuidToken] = useSessionStorage(\"userUuid\", \"\");\r\n\r\n  const loginUser = ({ username, password }) => {\r\n    axios\r\n      .post(`${URL}login`, { username, password })\r\n      .then((res) => {\r\n        setIsLoggedIn(true);\r\n        setSessionUuidToken(res.data.uuid.toString());\r\n        console.log(`Successfully logged in user: ${res.data.username}`);\r\n      })\r\n      .catch((err) => {\r\n        alert(`Unsuccessful login`);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateUserById = (userUuid, { username, password }) => {\r\n    axios\r\n      .put(`${URL}${userUuid}`, { username, password })\r\n      .then((res) => {\r\n        console.log(`Successfully updated user: ${res.data.username}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const deleteUserById = (userUuid) => {\r\n    axios\r\n      .delete(`${URL}${userUuid}`, { params: userUuid })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const getPingFromServer = () => {\r\n    axios\r\n      .get(`${URL}ping`, { timeout: 2000 })\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n        setPing(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Not connected to server`);\r\n        console.log(`Error: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  return {\r\n    createUser,\r\n    loginUser,\r\n    updateUserById,\r\n    deleteUserById,\r\n    isLoggedIn,\r\n    setIsLoggedIn,\r\n    getPingFromServer,\r\n  };\r\n};\r\n\r\nexport default useUserAPI;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"./contexts/Provider\";\r\nimport { PingContext } from \"./contexts/PingProvider\";\r\nimport useUserAPI from \"./util/useUserAPI\";\r\n\r\nconst StyledLink = styled(Link)`\r\ntext-decoration: none;\r\n\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n        `;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 2px;\r\n  display: flex;\r\n  width: 300px;\r\n  border: 2px solid black;\r\n  justify-content: center;\r\n  font-size: 25px;\r\n  flex-direction: row;\r\n  border-radius: 10px;\r\n`;\r\n\r\nfunction App() {\r\n  const { getPingFromServer } = useUserAPI();\r\n  const { theme } = useContext(ThemeContext);\r\n  const { ping } = useContext(PingContext);\r\n  const oppositeTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getPingFromServer();\r\n    });\r\n  }, [getPingFromServer]);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Dart Scoreboard\" switchThemeButton />\r\n      <div className=\"btnTable\">\r\n        {ping && (\r\n          <StyledLink to=\"/game/login\">\r\n            <StyledButton variant={oppositeTheme}>Log In</StyledButton>\r\n          </StyledLink>\r\n        )}\r\n        {ping ? (\r\n          <StyledLink to=\"/create_player\">\r\n            <StyledButton variant={oppositeTheme}>\r\n              Continue as Guest\r\n            </StyledButton>\r\n          </StyledLink>\r\n        ) : (\r\n          <StyledLink to=\"/create_player\">\r\n            <StyledButton variant={oppositeTheme}>Create Player</StyledButton>\r\n          </StyledLink>\r\n        )}\r\n        <StyledLink to=\"/rules\">\r\n          <StyledButton variant={oppositeTheme}>Rules</StyledButton>\r\n        </StyledLink>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst reducer = (state, action) => {\r\n  const { past, present, future } = state;\r\n  const { type, newPresent } = action;\r\n\r\n  switch (type) {\r\n    case \"undo\": {\r\n      if (past.length === 0) {\r\n        return state;\r\n      }\r\n      const previous = past[past.length - 1];\r\n      const newPast = past.slice(0, past.length - 1);\r\n\r\n      return {\r\n        past: newPast,\r\n        present: previous,\r\n        future: [present, ...future],\r\n      };\r\n    }\r\n    case \"redo\": {\r\n      if (future.length === 0) {\r\n        return state;\r\n      }\r\n      const next = future[0];\r\n      const newFuture = future.slice(1);\r\n\r\n      return {\r\n        past: [...past, present],\r\n        present: next,\r\n        future: newFuture,\r\n      };\r\n    }\r\n    case \"set\": {\r\n      if (newPresent === present) {\r\n        return state;\r\n      }\r\n      return {\r\n        past: [...past, present],\r\n        present: newPresent,\r\n        future: [],\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nconst useUndoRedo = (initialState) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    past: [],\r\n    present: initialState,\r\n    future: [],\r\n  });\r\n\r\n  const canUndo = state.past.length !== 0;\r\n  const canRedo = state.future.length !== 0;\r\n  const undo = useCallback(() => dispatch({ type: \"undo\" }), []);\r\n  const redo = useCallback(() => dispatch({ type: \"redo\" }), []);\r\n  const set = useCallback(\r\n    (newPresent) => dispatch({ type: \"set\", newPresent }),\r\n    []\r\n  );\r\n\r\n  return [state, { set, undo, redo, canUndo, canRedo }];\r\n};\r\n\r\nexport default useUndoRedo;\r\n","import { useState } from \"react\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\nimport useSessionStorage from \"./useSessionStorage\";\r\nimport useUndoRedo from \"../util/useUndoRedo\";\r\n\r\nconst useGame = () => {\r\n  // Main array to hold player objects\r\n  const [playerList, setPlayerList] = useSessionStorage(\"listOfPlayers\", []);\r\n\r\n  const addPlayer = (playerName) => {\r\n    setPlayerList([...playerList, playerName]);\r\n  };\r\n\r\n  const deletePlayer = (rowNumber) => {\r\n    let updatedRows = [...playerList];\r\n    updatedRows.splice(rowNumber, 1);\r\n    setPlayerList(updatedRows);\r\n  };\r\n\r\n  // Set turns and methods to cycle through players and rounds\r\n  const [turn, setTurn] = useState(0);\r\n\r\n  const changeTurns = () => {\r\n    const newTurn = turn + 1;\r\n    setTurn(newTurn % playerList.length);\r\n  };\r\n\r\n  const [currentPlayer, setCurrentPlayer] = useState(playerList[turn]);\r\n\r\n  const getCurrentPlayer = () => {\r\n    return playerList[turn];\r\n  };\r\n\r\n  const getCurrentPlayerByName = () => {\r\n    return playerList[turn].player;\r\n  };\r\n\r\n  const getCurrentPlayerById = () => {\r\n    return playerList[turn].id;\r\n  };\r\n\r\n  // Set X01 points to game and players\r\n  const [x01Points, setX01Points] = useLocalStorage(\"x01Points\", 0);\r\n\r\n  const x01GameSelect = (value) => {\r\n    setX01Points(value);\r\n  };\r\n\r\n  const assignX01PlayerScore = (x01Points) => {\r\n    let playerScore = [...playerList];\r\n    for (let i = 0; i < playerScore.length; i++) {\r\n      playerScore[i].score = x01Points;\r\n      playerScore[i].scoreList.push(parseInt(x01Points, 10));\r\n      setPlayerList(playerScore);\r\n    }\r\n  };\r\n\r\n  const assignPlayerLives = (playerLives) => {\r\n    let numberOfPlayerLives = [...playerList];\r\n    for (let i = 0; i < numberOfPlayerLives.length; i++) {\r\n      numberOfPlayerLives[i].lives = Number(playerLives);\r\n      setPlayerList(numberOfPlayerLives);\r\n    }\r\n  };\r\n\r\n  const resetScoreList = () => {\r\n    let newScoreList = [...playerList];\r\n    for (let i = 0; i < newScoreList.length; i++) {\r\n      newScoreList[i].scoreList = [];\r\n      newScoreList[i].score = 0;\r\n      newScoreList[i].lives = 0;\r\n      newScoreList[i].hitCount = {};\r\n      newScoreList[i].highScore = 0;\r\n      setPlayerList(newScoreList);\r\n      setTurn(0);\r\n    }\r\n  };\r\n\r\n  const [checkedPlayerList, setCheckedPlayerList] = useState([]);\r\n\r\n  const shufflePlayerList = (array) => {\r\n    let currentIndex = array.length,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex != 0) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex],\r\n        array[currentIndex],\r\n      ];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const [playerListHistory, { set, undo, redo, canUndo, canRedo }] =\r\n    useUndoRedo({\r\n      turn: 0,\r\n      playerList: [...playerList],\r\n      currentPlayer: currentPlayer,\r\n      disabledButtons: [],\r\n    });\r\n\r\n  return {\r\n    playerList,\r\n    turn,\r\n    x01Points,\r\n    setX01Points,\r\n    addPlayer,\r\n    deletePlayer,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    x01GameSelect,\r\n    assignX01PlayerScore,\r\n    assignPlayerLives,\r\n    resetScoreList,\r\n    setPlayerList,\r\n    setTurn,\r\n    getCurrentPlayerByName,\r\n    getCurrentPlayerById,\r\n    shufflePlayerList,\r\n    checkedPlayerList,\r\n    setCheckedPlayerList,\r\n    setCurrentPlayer,\r\n    currentPlayer,\r\n    playerListHistory,\r\n    set,\r\n    undo,\r\n    redo,\r\n    canUndo,\r\n    canRedo,\r\n  };\r\n};\r\n\r\nexport default useGame;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport { Button, Container, Col, Row, Table } from \"react-bootstrap\";\r\nimport useGame from \"../util/useGame\";\r\n\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\n\r\nconst CreatePlayerList = () => {\r\n  const { playerList, addPlayer, deletePlayer } = useGame();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const initialState = {\r\n    id: Math.floor(Math.random() * 100),\r\n    playerName: \"\",\r\n    score: 0,\r\n    scoreList: [],\r\n    lives: 0,\r\n    highScore: 0,\r\n  };\r\n  const [playerObject, setPlayerObject] = useState(initialState);\r\n  const { playerName } = playerObject;\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        onAddPlayer();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  const onHandleChange = ({ target: { name, value } }) => {\r\n    setPlayerObject({ ...playerObject, [name]: value });\r\n  };\r\n\r\n  const onAddPlayer = () => {\r\n    addPlayer(playerObject);\r\n    setPlayerObject(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Create Player\" goBackButton />\r\n      <Container className=\"mt-5 mb-5\" fluid>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"playerName\"\r\n              placeholder=\"Player Name\"\r\n              onChange={onHandleChange}\r\n              value={playerName}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={onAddPlayer}>Add Player</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"mt-5 mb-5\" fluid>\r\n        <Table variant={theme} bordered striped>\r\n          <thead>\r\n            <tr>\r\n              <th>Player #</th>\r\n              <th>Player Name</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {playerList.map((player, index) => {\r\n              return (\r\n                <PlayerList\r\n                  key={index}\r\n                  index={index}\r\n                  player={player}\r\n                  deletePlayer={deletePlayer}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n\r\n      <Button\r\n        as={Link}\r\n        to=\"/game/create\"\r\n        disabled={playerList.length < 2 ? true : false}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const PlayerList = ({ index, player, deletePlayer }) => {\r\n  let playerName = player.playerName;\r\n\r\n  const removeRow = (index) => {\r\n    deletePlayer(index);\r\n  };\r\n\r\n  return (\r\n    <tr key={index + 1}>\r\n      <th>{index + 1}</th>\r\n      <td>{playerName}</td>\r\n      <td>\r\n        <Button variant=\"danger\" size=\"sm\" onClick={() => removeRow(index)}>\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nPlayerList.propTypes = {\r\n  index: PropTypes.number,\r\n  player: PropTypes.object,\r\n  deletePlayer: PropTypes.func,\r\n};\r\n\r\nexport default CreatePlayerList;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport useGame from \"../util/useGame\";\r\n\r\nexport const CreateGame = () => {\r\n  return (\r\n    <>\r\n      <Header title=\"Create a Game\" goBackButton />\r\n      <form>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            id=\"gameDropDown\"\r\n            variant=\"primary\"\r\n            title=\"Game DropDown\"\r\n          >\r\n            Please Select a Game\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu variant=\"primary\">\r\n            <Dropdown.Item as={Link} to=\"/game/x01/create\" eventKey=\"X01\">\r\n              X01\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/game/baseball/\" eventKey=\"Baseball\">\r\n              Baseball\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to=\"/game/elimination/create\"\r\n              eventKey=\"Elimination\"\r\n            >\r\n              Elimination\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/game/killer/create\" eventKey=\"Killer\">\r\n              Killer\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/game/cricket\" eventKey=\"Cricket\">\r\n              Cricket\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport function X01GameSelection() {\r\n  const { x01Points, setX01Points, x01GameSelect, assignX01PlayerScore } =\r\n    useGame();\r\n\r\n  const x01PointsList = [201, 301, 401, 501, 601, 701];\r\n\r\n  const onPointsSubmit = () => {\r\n    x01GameSelect(x01Points);\r\n    assignX01PlayerScore(x01Points);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"X01\" goBackButton />\r\n      <Dropdown value={x01Points} onSelect={setX01Points}>\r\n        <Dropdown.Toggle\r\n          id=\"pointsDropdown\"\r\n          variant=\"primary\"\r\n          name=\"pointsDropdown\"\r\n          className=\"m-5\"\r\n        >\r\n          Points\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu variant=\"primary\">\r\n          {x01PointsList.map((game) => {\r\n            return (\r\n              <Dropdown.Item key={game} eventKey={game}>\r\n                {game}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <h2 className=\"m-5\">Game selected: {x01Points}</h2>\r\n      <Button\r\n        className=\"mt-2\"\r\n        variant=\"primary\"\r\n        as={Link}\r\n        to=\"/game/x01\"\r\n        onClick={onPointsSubmit}\r\n        disabled={x01Points === 0 ? true : false}\r\n      >\r\n        Continue to Game\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const KillerSetUp = () => {\r\n  return (\r\n    <>\r\n      <Header title=\"Killer\" goBackButton />\r\n      <h1>Coming Soon!</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const EliminationSetUp = () => {\r\n  const { assignPlayerLives } = useGame();\r\n  const eliminationLives = [3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n  const [playerLives, setPlayerLives] = useState(0);\r\n\r\n  const onLifeSelect = (eventKey) => {\r\n    setPlayerLives(eventKey);\r\n  };\r\n\r\n  const onPointsSubmit = () => {\r\n    assignPlayerLives(playerLives);\r\n  };\r\n  return (\r\n    <>\r\n      <Header title=\"Elimination\" goBackButton />\r\n      <Dropdown value={playerLives} onSelect={onLifeSelect}>\r\n        <Dropdown.Toggle\r\n          id=\"livesDropdown\"\r\n          variant=\"primary\"\r\n          name=\"livesDropdown\"\r\n          className=\"m-5\"\r\n        >\r\n          Lives\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu variant=\"primary\">\r\n          {eliminationLives.map((numOfLives) => {\r\n            return (\r\n              <Dropdown.Item key={numOfLives} eventKey={numOfLives}>\r\n                {numOfLives}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <h2 className=\"m-5\">Number of Lives Selected: {playerLives}</h2>\r\n      <Button\r\n        className=\"m-2\"\r\n        variant=\"primary\"\r\n        as={Link}\r\n        to=\"/game/elimination\"\r\n        onClick={onPointsSubmit}\r\n        disabled={playerLives === 0 ? true : false}\r\n      >\r\n        Continue to Game\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nEliminationSetUp.propTypes = { assignPlayerLives: PropTypes.func };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { ImUndo, ImRedo } from \"react-icons/im\";\r\n\r\nconst UndoRedo = ({\r\n  canUndo,\r\n  canRedo,\r\n  undo,\r\n  redo,\r\n  playerListHistory,\r\n  setPlayerList,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  setTurn,\r\n  setDisable,\r\n  disable,\r\n}) => {\r\n  const handleUndo = () => {\r\n    undo();\r\n    setPlayerList(\r\n      playerListHistory.past[playerListHistory.past.length - 1].playerList\r\n    );\r\n    const newPlayer = { ...currentPlayer };\r\n    setCurrentPlayer(newPlayer, playerListHistory.present.currentPlayer);\r\n    const newTurn = playerListHistory.present.turn;\r\n    setTurn(newTurn);\r\n    setDisable(\r\n      playerListHistory.past[playerListHistory.past.length - 1].disabledButtons\r\n    );\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    redo();\r\n    setPlayerList(\r\n      playerListHistory.future[playerListHistory.future.length - 1].playerList\r\n    );\r\n    const newPlayer = { ...currentPlayer };\r\n    setCurrentPlayer(newPlayer, playerListHistory.present.currentPlayer);\r\n    const newTurn = playerListHistory.present.turn;\r\n    setTurn(newTurn);\r\n    setDisable(\r\n      playerListHistory.future[playerListHistory.future.length - 1]\r\n        .disabledButtons\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Button\r\n          disabled={!canUndo}\r\n          onClick={() => {\r\n            handleUndo();\r\n          }}\r\n        >\r\n          <ImUndo />\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <Button\r\n          disabled={!canRedo}\r\n          onClick={() => {\r\n            handleRedo();\r\n          }}\r\n        >\r\n          <ImRedo />\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nUndoRedo.propTypes = {\r\n  canUndo: PropTypes.bool.isRequired,\r\n  canRedo: PropTypes.bool.isRequired,\r\n  undo: PropTypes.func.isRequired,\r\n  redo: PropTypes.func.isRequired,\r\n  playerListHistory: PropTypes.object.isRequired,\r\n  setPlayerList: PropTypes.func.isRequired,\r\n  currentPlayer: PropTypes.object.isRequired,\r\n  setCurrentPlayer: PropTypes.func.isRequired,\r\n  setTurn: PropTypes.func.isRequired,\r\n  setDisable: PropTypes.func,\r\n  disable: PropTypes.array,\r\n};\r\n\r\nexport default UndoRedo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Container, Button, ButtonGroup } from \"react-bootstrap\";\r\n\r\nimport UndoRedo from \"./UndoRedo\";\r\n\r\nconst CricketScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  getCurrentPlayer,\r\n  resetScoreList,\r\n  setTurn,\r\n  setCurrentPlayer,\r\n  currentPlayer,\r\n  playerListHistory,\r\n  set,\r\n  undo,\r\n  redo,\r\n  canUndo,\r\n  canRedo,\r\n  turn,\r\n}) => {\r\n  const [playerScoreList, setPlayerScoreList] = useState([]);\r\n\r\n  const [disable, setDisable] = useState([\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n\r\n  let targets = [20, 19, 18, 17, 16, 15, 25];\r\n\r\n  const handleInput = (number) => {\r\n    playerScoreList.push(number);\r\n    setPlayerScoreList([...playerScoreList]);\r\n  };\r\n\r\n  const deleteScore = () => {\r\n    setPlayerScoreList([]);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n    } else if (value === \"Del\") {\r\n      deleteScore();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const nowCurrentPlayer = getCurrentPlayer();\r\n\r\n  const changeTurnValidate = () => {\r\n    playerScoreList.forEach((score) => {\r\n      if (score === \"Bull\") {\r\n        nowCurrentPlayer.scoreList.push(25);\r\n        setPlayerScoreList([]);\r\n      } else {\r\n        nowCurrentPlayer.scoreList.push(score);\r\n        setPlayerScoreList([]);\r\n      }\r\n    });\r\n    changeTurn();\r\n  };\r\n\r\n  const changeTurn = () => {\r\n    changeTurns();\r\n    setPlayerList([...playerList]);\r\n    calculatePlayerScore();\r\n    setCurrentPlayer(playerList[turn]);\r\n    set({\r\n      turn: turn,\r\n      playerList: JSON.parse(JSON.stringify(playerList)),\r\n      currentPlayer: JSON.parse(JSON.stringify(currentPlayer)),\r\n      disabledButtons: JSON.parse(JSON.stringify(disable)),\r\n    });\r\n    declareWinner();\r\n  };\r\n\r\n  const calculatePlayerScore = () => {\r\n    let newScoreArray = [];\r\n    for (let i = 0; i < targets.length; i++) {\r\n      let checkNumOfMarks = playerList.map((player) => {\r\n        return player.scoreList.filter((hitNum) => hitNum === targets[i])\r\n          .length;\r\n      });\r\n      let marks = checkNumOfMarks.every((mark) => mark >= 3);\r\n      if (marks) {\r\n        disable[i] = true;\r\n        setDisable([...disable]);\r\n      }\r\n    }\r\n    for (let i = 0; i < targets.length; i++) {\r\n      let countedScore = nowCurrentPlayer.scoreList.filter(\r\n        (hitNum) => hitNum === targets[i]\r\n      );\r\n      countedScore.splice(0, 3);\r\n      let newScore = countedScore.reduce((a, b) => a + b, 0);\r\n      newScoreArray.push(newScore);\r\n    }\r\n    nowCurrentPlayer.score = newScoreArray.reduce((a, b) => a + b, 0);\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    let winner = null;\r\n    // let winningScore = -1;\r\n\r\n    const countPlayerArray = targets.map((target) => {\r\n      const playerArrayOccurences = nowCurrentPlayer.scoreList.filter(\r\n        (hitNum) => hitNum === target\r\n      ).length;\r\n      return playerArrayOccurences;\r\n    });\r\n\r\n    if (\r\n      countPlayerArray.every((value) => value >= 3) &&\r\n      nowCurrentPlayer.score >= 0\r\n    ) {\r\n      winner = nowCurrentPlayer.playerName;\r\n      console.log(`Winner is ${winner}`);\r\n\r\n      if (winner) {\r\n        return (\r\n          <>\r\n            <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n              <p>The WINNER is: {winner}</p>\r\n              <p>Congratulations!</p>\r\n              <Button\r\n                variant=\"success\"\r\n                className=\"m-3\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Play Again\r\n              </Button>\r\n              <Button\r\n                variant=\"success\"\r\n                as={Link}\r\n                to=\"/game/create\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Choose another game\r\n              </Button>\r\n            </Alert>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onMouseDown = (e) => {\r\n      e.preventDefault();\r\n      e.target.blur();\r\n    };\r\n    document.addEventListener(\"mousedown\", onMouseDown);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onMouseDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <p>Total: {playerScoreList.toString()}</p>\r\n        {declareWinner()}\r\n        <div className=\"scoreCalculator\">\r\n          <div className=\"scoreKeypad\">\r\n            {getCalculatorKeys().map((keyValue, index) => (\r\n              <CricketScoreCalculatorKey\r\n                name=\"score\"\r\n                key={index}\r\n                keyValue={keyValue}\r\n                onChange={handleInput}\r\n                onClick={handleScoreChange}\r\n                disabled={disable[index]}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"undoRedo mt-4\">\r\n            <UndoRedo\r\n              undo={undo}\r\n              redo={redo}\r\n              set={set}\r\n              canUndo={canUndo}\r\n              canRedo={canRedo}\r\n              playerListHistory={playerListHistory}\r\n              setPlayerList={setPlayerList}\r\n              currentPlayer={currentPlayer}\r\n              setCurrentPlayer={setCurrentPlayer}\r\n              setTurn={setTurn}\r\n              setDisable={setDisable}\r\n              disable={disable}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nCricketScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  getCurrentPlayer: PropTypes.func,\r\n  resetScoreList: PropTypes.func,\r\n  setTurn: PropTypes.func,\r\n  setCurrentPlayer: PropTypes.func,\r\n  currentPlayer: PropTypes.object,\r\n  playerListHistory: PropTypes.object,\r\n  set: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  redo: PropTypes.func,\r\n  canUndo: PropTypes.bool,\r\n  canRedo: PropTypes.bool,\r\n  turn: PropTypes.number,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [20, 19, 18, 17, 16, 15, \"Bull\", \"Del\", \"Enter\"];\r\n};\r\n\r\nconst CricketScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"primary\"\r\n        onClick={() => props.onClick(props.keyValue)}\r\n        disabled={props.disabled}\r\n      >\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nCricketScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default CricketScoreCalculator;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { BiCaretLeft } from \"react-icons/bi\";\r\nimport { AiOutlineCloseCircle, AiOutlineClose } from \"react-icons/ai\";\r\nimport { BsSlash } from \"react-icons/bs\";\r\n\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\n\r\nconst Scoreboard = ({\r\n  playerList,\r\n  x01Points,\r\n  getCurrentPlayerById,\r\n  variant,\r\n  currentPlayer,\r\n}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  // const currentPlayer = getCurrentPlayer();\r\n  const currentPlayerById = getCurrentPlayerById();\r\n\r\n  return (\r\n    <>\r\n      <Table variant={theme} bordered striped size=\"sm\">\r\n        <TableHeader variant={variant} />\r\n        <PlayerData\r\n          playerList={playerList}\r\n          variant={variant}\r\n          x01Points={x01Points}\r\n          currentPlayer={currentPlayer}\r\n          currentPlayerById={currentPlayerById}\r\n        />\r\n      </Table>\r\n      {variant === \"x01\" && (\r\n        <DisplayCurrentRoundInformation currentPlayer={currentPlayer} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nScoreboard.propTypes = {\r\n  variant: PropTypes.string,\r\n  playerList: PropTypes.array,\r\n  x01Points: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  getCurrentPlayer: PropTypes.func,\r\n  getCurrentPlayerByName: PropTypes.func,\r\n  getCurrentPlayerById: PropTypes.func,\r\n  currentPlayer: PropTypes.object,\r\n};\r\n\r\nconst inningNumber = [\"Player\", 1, 2, 3, 4, 5, 6, 7, 8, 9, \"Total\"];\r\nconst cricketNumbers = [\"Player\", 20, 19, 18, 17, 16, 15, \"Bull\", \"Score\"];\r\nconst eliminationHeader = [\"Player\", \"Score\", \"Lives\"];\r\nconst killerHeader = [\"Player\", \"Player #\", \"Lives\", \"Killer\"];\r\n\r\nconst TableHeader = ({ variant }) => {\r\n  return (\r\n    <>\r\n      <thead>\r\n        <tr>\r\n          {variant === \"baseball\" &&\r\n            inningNumber.map((inning, index) => {\r\n              return <th key={index}>{inning}</th>;\r\n            })}\r\n          {variant === \"cricket\" &&\r\n            cricketNumbers.map((number, index) => {\r\n              return <th key={index}>{number}</th>;\r\n            })}\r\n          {variant === \"elimination\" &&\r\n            eliminationHeader.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n          {variant === \"killer\" &&\r\n            killerHeader.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n        </tr>\r\n      </thead>\r\n    </>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = { variant: PropTypes.string };\r\n\r\nconst PlayerData = ({\r\n  playerList,\r\n  variant,\r\n  currentPlayer,\r\n  currentPlayerById,\r\n}) => {\r\n  return (\r\n    <>\r\n      <tbody>\r\n        {playerList.map((player, index) => {\r\n          switch (variant) {\r\n            case \"baseball\":\r\n              return (\r\n                <BaseballPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"cricket\":\r\n              return (\r\n                <CricketPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"x01\":\r\n              return (\r\n                <X01PlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"elimination\":\r\n              return (\r\n                <EliminationPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"killer\":\r\n              return (\r\n                <KillerPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            default:\r\n              throw new Error(\"Invalid variant!\");\r\n          }\r\n        })}\r\n      </tbody>\r\n    </>\r\n  );\r\n};\r\n\r\nPlayerData.propTypes = {\r\n  playerList: PropTypes.array,\r\n  variant: PropTypes.string,\r\n  currentPlayer: PropTypes.object,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst X01PlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th>{player.playerName}</th>\r\n      )}\r\n      <td>{player.score}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nX01PlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst CricketPlayerData = ({ player, index, currentPlayerById }) => {\r\n  const hitTargets = [\r\n    player.scoreList.filter((hitNum) => hitNum === 20).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 19).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 18).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 17).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 16).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 15).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 25).length,\r\n  ];\r\n\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th key={index}>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th key={index}>{player.playerName}</th>\r\n      )}\r\n      {hitTargets.map((hitTarget, index) => {\r\n        return (\r\n          <td key={index}>\r\n            <CricketScoreboardDisplay player={player} hitTarget={hitTarget} />\r\n          </td>\r\n        );\r\n      })}\r\n      <td>{player.score}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nCricketPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst CricketScoreboardDisplay = ({ hitTarget }) => {\r\n  if (hitTarget === 1) {\r\n    return <BsSlash style={{ fontSize: \"25px\" }} />;\r\n  } else if (hitTarget === 2) {\r\n    return <AiOutlineClose style={{ fontSize: \"20px\" }} />;\r\n  } else if (hitTarget >= 3) {\r\n    return <AiOutlineCloseCircle style={{ fontSize: \"28px\" }} />;\r\n  }\r\n  return null;\r\n};\r\n\r\nCricketScoreboardDisplay.propTypes = {\r\n  player: PropTypes.object,\r\n  hitTarget: PropTypes.number,\r\n};\r\n\r\nconst BaseballPlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th>{player.playerName}</th>\r\n      )}\r\n      <td>{player.scoreList[0]}</td>\r\n      <td>{player.scoreList[1]}</td>\r\n      <td>{player.scoreList[2]}</td>\r\n      <td>{player.scoreList[3]}</td>\r\n      <td>{player.scoreList[4]}</td>\r\n      <td>{player.scoreList[5]}</td>\r\n      <td>{player.scoreList[6]}</td>\r\n      <td>{player.scoreList[7]}</td>\r\n      <td>{player.scoreList[8]}</td>\r\n      <td>{player.scoreList.reduce((sum, current) => sum + current, 0)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nBaseballPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst EliminationPlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th>{player.playerName}</th>\r\n      )}\r\n      <td>{player.score}</td>\r\n      <td>{player.lives}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nEliminationPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst KillerPlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th style={{ borderColor: \"black\" }}>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th style={{ borderColor: \"black\" }}>{player.playerName}</th>\r\n      )}\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nKillerPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst DisplayCurrentRoundInformation = ({ currentPlayer }) => {\r\n  return (\r\n    <Container className=\"my-3\">\r\n      <Row>\r\n        <Col>\r\n          <b>High Score:</b> {currentPlayer.highScore}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDisplayCurrentRoundInformation.propTypes = {\r\n  currentPlayer: PropTypes.object,\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport CricketScoreCalculator from \"../../components/CricketScoreCalculator\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Cricket = () => {\r\n  const {\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    resetScoreList,\r\n    turn,\r\n    getCurrentPlayerById,\r\n    getCurrentPlayerByName,\r\n    setTurn,\r\n    setCurrentPlayer,\r\n    currentPlayer,\r\n    playerListHistory,\r\n    set,\r\n    undo,\r\n    redo,\r\n    canUndo,\r\n    canRedo,\r\n  } = useGame();\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Cricket\"\r\n        resetScoreList={resetScoreList}\r\n        goBackButton\r\n        resetButton\r\n      />\r\n      <Scoreboard\r\n        playerList={playerList}\r\n        variant=\"cricket\"\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n      />\r\n      <CricketScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        turn={turn}\r\n        resetScoreList={resetScoreList}\r\n        setTurn={setTurn}\r\n        setCurrentPlayer={setCurrentPlayer}\r\n        currentPlayer={currentPlayer}\r\n        playerListHistory={playerListHistory}\r\n        set={set}\r\n        undo={undo}\r\n        redo={redo}\r\n        canUndo={canUndo}\r\n        canRedo={canRedo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cricket;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport UndoRedo from \"./UndoRedo\";\r\n\r\nconst ScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  getCurrentPlayer,\r\n  resetScoreList,\r\n  round,\r\n  setRound,\r\n  turn,\r\n  setTurn,\r\n  setCurrentPlayer,\r\n  currentPlayer,\r\n  playerListHistory,\r\n  set,\r\n  undo,\r\n  redo,\r\n  canUndo,\r\n  canRedo,\r\n}) => {\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  const handleInput = (number) => {\r\n    setPlayerScore(`${playerScore}${number}`);\r\n  };\r\n\r\n  const deleteInput = () => {\r\n    setPlayerScore(0);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n      setPlayerScore(0);\r\n    } else if (value === \"Del\") {\r\n      deleteInput();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const changeTurnValidate = () => {\r\n    const score = parseInt(playerScore, 10);\r\n    if (!isNaN(score)) {\r\n      changeTurn(score);\r\n    }\r\n  };\r\n\r\n  const changeTurn = (score) => {\r\n    let nowCurrentPlayer = getCurrentPlayer();\r\n    nowCurrentPlayer.scoreList.push(score);\r\n    setPlayerList([...playerList]);\r\n    changeTurns();\r\n    setCurrentPlayer(playerList[turn]);\r\n    changeNumberOfRounds();\r\n    set({\r\n      turn: turn,\r\n      playerList: JSON.parse(JSON.stringify(playerList)),\r\n      currentPlayer: JSON.parse(JSON.stringify(currentPlayer)),\r\n    });\r\n    declareWinner();\r\n  };\r\n\r\n  const changeNumberOfRounds = () => {\r\n    setRound(round + 1);\r\n  };\r\n\r\n  const eraseGameData = () => {\r\n    resetScoreList();\r\n    setRound(0);\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    const totalRounds = Math.floor(playerList.length * 9);\r\n    if (round === totalRounds) {\r\n      let [winnerScore, winner] = [-1, null];\r\n      playerList.forEach((player) => {\r\n        const totalScore = player.scoreList.reduce((a, b) => a + b, 0);\r\n        if (totalScore > winnerScore) {\r\n          winnerScore = totalScore;\r\n          winner = player.playerName;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <>\r\n          <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n            <p>The WINNER is: {winner}</p>\r\n            <p>Congratulations!</p>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"m-3\"\r\n              onClick={() => eraseGameData()}\r\n            >\r\n              Play Again\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              as={Link}\r\n              to=\"/game/create\"\r\n              onClick={() => eraseGameData()}\r\n            >\r\n              Choose another game\r\n            </Button>\r\n          </Alert>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      const number = parseInt(playerScore, 10);\r\n      if (e.key <= 57 || e.key >= 48) {\r\n        setPlayerScore(number + e.key);\r\n      }\r\n      if (e.key === \"Enter\") {\r\n        changeTurnValidate();\r\n        setPlayerScore(0);\r\n      } else if (e.key === \"Backspace\") {\r\n        deleteInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onMouseDown = (e) => {\r\n      e.preventDefault();\r\n      e.target.blur();\r\n    };\r\n    document.addEventListener(\"mousedown\", onMouseDown);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onMouseDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {declareWinner() ? declareWinner() : <p>Total: {playerScore}</p>}\r\n      <div className=\"scoreCalculator\">\r\n        <div className=\"scoreKeypad\">\r\n          {!declareWinner() &&\r\n            getCalculatorKeys().map((keyValue, index) => (\r\n              <ScoreCalculatorKey\r\n                name=\"score\"\r\n                key={index}\r\n                keyValue={keyValue}\r\n                onClick={handleScoreChange}\r\n                onChange={handleInput}\r\n              />\r\n            ))}\r\n        </div>\r\n        <div className=\"undoRedo mt-4\">\r\n          <UndoRedo\r\n            undo={undo}\r\n            redo={redo}\r\n            set={set}\r\n            canUndo={canUndo}\r\n            canRedo={canRedo}\r\n            playerListHistory={playerListHistory}\r\n            setPlayerList={setPlayerList}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            setTurn={setTurn}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  getCurrentPlayer: PropTypes.func,\r\n  resetScoreList: PropTypes.func,\r\n  turn: PropTypes.number,\r\n  round: PropTypes.number,\r\n  setRound: PropTypes.func,\r\n  setTurn: PropTypes.func,\r\n  setCurrentPlayer: PropTypes.func,\r\n  currentPlayer: PropTypes.object,\r\n  playerListHistory: PropTypes.array,\r\n  set: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  redo: PropTypes.func,\r\n  canUndo: PropTypes.bool,\r\n  canRedo: PropTypes.bool,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [9, 8, 7, 6, 5, 4, 3, 2, 1, \"Del\", \"0\", \"Enter\"];\r\n};\r\n\r\nconst ScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default ScoreCalculator;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport ScoreCalculator from \"../../components/ScoreCalculator\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Baseball = () => {\r\n  const {\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    resetScoreList,\r\n    turn,\r\n    getCurrentPlayerById,\r\n    getCurrentPlayerByName,\r\n    setTurn,\r\n    setCurrentPlayer,\r\n    currentPlayer,\r\n    playerListHistory,\r\n    set,\r\n    undo,\r\n    redo,\r\n    canUndo,\r\n    canRedo,\r\n  } = useGame();\r\n\r\n  const [round, setRound] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Baseball\"\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n      />\r\n      <Scoreboard\r\n        playerList={playerList}\r\n        variant=\"baseball\"\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        round={round}\r\n        currentPlayer={currentPlayer}\r\n      />\r\n      <ScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        setRound={setRound}\r\n        round={round}\r\n        turn={turn}\r\n        resetScoreList={resetScoreList}\r\n        setTurn={setTurn}\r\n        setCurrentPlayer={setCurrentPlayer}\r\n        currentPlayer={currentPlayer}\r\n        playerListHistory={playerListHistory}\r\n        set={set}\r\n        undo={undo}\r\n        redo={redo}\r\n        canUndo={canUndo}\r\n        canRedo={canRedo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Baseball;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\nimport UndoRedo from \"./UndoRedo\";\r\n\r\nconst X01ScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  getCurrentPlayer,\r\n  resetScoreList,\r\n  playerListHistory,\r\n  set,\r\n  undo,\r\n  redo,\r\n  canUndo,\r\n  canRedo,\r\n  currentPlayer,\r\n  setCurrentPlayer,\r\n  setTurn,\r\n  turn,\r\n}) => {\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  const handleInput = (number) => {\r\n    setPlayerScore(`${playerScore}${number}`);\r\n  };\r\n\r\n  const deleteInput = () => {\r\n    setPlayerScore(0);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n      setPlayerScore(0);\r\n    } else if (value === \"Del\") {\r\n      deleteInput();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const changeTurnValidate = () => {\r\n    const score = parseInt(playerScore, 10);\r\n    if (score > 180) {\r\n      alert(`Score cannot exceed 180!`);\r\n      setPlayerScore(0);\r\n    } else {\r\n      if (!isNaN(score)) {\r\n        changeTurn(score);\r\n      }\r\n    }\r\n  };\r\n\r\n  // TO-DO : Add undo/redo functionality\r\n  // Currently players are not being cycled through\r\n  const changeTurn = (score) => {\r\n    let nowCurrentPlayer = getCurrentPlayer();\r\n    nowCurrentPlayer.scoreList.push(score);\r\n    let playerScoreReduced = nowCurrentPlayer.scoreList.reduce(\r\n      (sum, current) => sum - current\r\n    );\r\n    nowCurrentPlayer.score = playerScoreReduced;\r\n    for (let i = 0; i < nowCurrentPlayer.scoreList.length; i++) {\r\n      if (\r\n        nowCurrentPlayer.scoreList[i] > nowCurrentPlayer.highScore &&\r\n        nowCurrentPlayer.scoreList[i] < 180\r\n      ) {\r\n        nowCurrentPlayer.highScore = nowCurrentPlayer.scoreList[i];\r\n      }\r\n    }\r\n    setPlayerList([...playerList]);\r\n    changeTurns();\r\n    setCurrentPlayer(playerList[turn]);\r\n    set({\r\n      turn: turn,\r\n      playerList: JSON.parse(JSON.stringify(playerList)),\r\n      currentPlayer: JSON.parse(JSON.stringify(currentPlayer)),\r\n    });\r\n    declareWinner();\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    let winner = null;\r\n    playerList.forEach((player) => {\r\n      if (player.score <= 0) {\r\n        player.score = 0;\r\n        winner = player.playerName;\r\n      }\r\n    });\r\n    if (!winner) {\r\n      return (\r\n        <>\r\n          <p>Total: {playerScore}</p>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n          <p>The WINNER is: {winner}</p>\r\n          <p>Congratulations!</p>\r\n          <Button\r\n            variant=\"success\"\r\n            as={Link}\r\n            to=\"/game/x01/create\"\r\n            className=\"m-3\"\r\n            onClick={() => resetScoreList()}\r\n          >\r\n            Play Again\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            as={Link}\r\n            to=\"/game/create\"\r\n            onClick={() => resetScoreList()}\r\n          >\r\n            Choose another game\r\n          </Button>\r\n        </Alert>\r\n      </>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      const number = playerScore;\r\n      if (e.key <= 57 || e.key >= 48) {\r\n        setPlayerScore(number + e.key);\r\n      }\r\n      if (e.key === \"Enter\") {\r\n        changeTurnValidate();\r\n        setPlayerScore(0);\r\n      } else if (e.key === \"Backspace\") {\r\n        deleteInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onMouseDown = (e) => {\r\n      e.preventDefault();\r\n      e.target.blur();\r\n    };\r\n    document.addEventListener(\"mousedown\", onMouseDown);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onMouseDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {declareWinner()}\r\n      <div className=\"scoreCalculator\">\r\n        <div className=\"scoreKeypad\">\r\n          {getCalculatorKeys().map((keyValue, index) => (\r\n            <ScoreCalculatorKey\r\n              name=\"score\"\r\n              key={index}\r\n              keyValue={keyValue}\r\n              onClick={handleScoreChange}\r\n              onChange={handleInput}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"undoRedo mt-4\">\r\n          <UndoRedo\r\n            undo={undo}\r\n            redo={redo}\r\n            set={set}\r\n            canUndo={canUndo}\r\n            canRedo={canRedo}\r\n            playerListHistory={playerListHistory}\r\n            setPlayerList={setPlayerList}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            setTurn={setTurn}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nX01ScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  getCurrentPlayer: PropTypes.func,\r\n  resetScoreList: PropTypes.func,\r\n  assignX01PlayerScore: PropTypes.func,\r\n  x01Points: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  playerListHistory: PropTypes.array,\r\n  set: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  redo: PropTypes.func,\r\n  canUndo: PropTypes.bool,\r\n  canRedo: PropTypes.bool,\r\n  currentPlayer: PropTypes.object,\r\n  setTurn: PropTypes.func,\r\n  setCurrentPlayer: PropTypes.func,\r\n  turn: PropTypes.number,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [9, 8, 7, 6, 5, 4, 3, 2, 1, \"Del\", \"0\", \"Enter\"];\r\n};\r\n\r\nconst ScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default X01ScoreCalculator;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport X01ScoreCalculator from \"../../components/X01ScoreCalculator\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst X01 = () => {\r\n  const {\r\n    x01Points,\r\n    assignX01PlayerScore,\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    resetScoreList,\r\n    getCurrentPlayer,\r\n    getCurrentPlayerById,\r\n    getCurrentPlayerByName,\r\n    currentPlayer,\r\n    playerListHistory,\r\n    set,\r\n    undo,\r\n    redo,\r\n    canUndo,\r\n    canRedo,\r\n    setTurn,\r\n    setCurrentPlayer,\r\n    turn,\r\n  } = useGame();\r\n  return (\r\n    <>\r\n      <Header\r\n        title={x01Points}\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n        outShotButton\r\n      />\r\n      <Scoreboard\r\n        variant=\"x01\"\r\n        x01Points={x01Points}\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n        currentPlayer={currentPlayer}\r\n      />\r\n      <X01ScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        assignX01PlayerScore={assignX01PlayerScore}\r\n        resetScoreList={resetScoreList}\r\n        x01Points={x01Points}\r\n        playerListHistory={playerListHistory}\r\n        set={set}\r\n        undo={undo}\r\n        redo={redo}\r\n        canUndo={canUndo}\r\n        canRedo={canRedo}\r\n        setTurn={setTurn}\r\n        setCurrentPlayer={setCurrentPlayer}\r\n        currentPlayer={currentPlayer}\r\n        turn={turn}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default X01;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\n\r\nimport UndoRedo from \"./UndoRedo\";\r\n\r\nconst EliminationScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  turn,\r\n  resetScoreList,\r\n  setTurn,\r\n  setCurrentPlayer,\r\n  currentPlayer,\r\n  playerListHistory,\r\n  set,\r\n  undo,\r\n  redo,\r\n  canUndo,\r\n  canRedo,\r\n}) => {\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n  const [prevPlayerScore, setPrevPlayerScore] = useState(-1);\r\n  const [playerIsOut, setPlayerIsOut] = useState([]);\r\n\r\n  const handleInput = (number) => {\r\n    setPlayerScore(`${playerScore}${number}`);\r\n  };\r\n\r\n  const deleteInput = () => {\r\n    setPlayerScore(0);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n      setPlayerScore(0);\r\n    } else if (value === \"Del\") {\r\n      deleteInput();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const changeTurnValidate = () => {\r\n    const score = parseInt(playerScore, 10);\r\n    if (!isNaN(score)) {\r\n      changeTurn(score);\r\n    }\r\n  };\r\n\r\n  const passPlayerTurn = () => {\r\n    changeTurns();\r\n  };\r\n\r\n  const changeTurn = (score) => {\r\n    let nowCurrentPlayer = playerList[turn];\r\n\r\n    if (nowCurrentPlayer.lives !== 0) {\r\n      nowCurrentPlayer.scoreList.push(score);\r\n      for (let i = 0; i < nowCurrentPlayer.scoreList.length; i++) {\r\n        nowCurrentPlayer.score = nowCurrentPlayer.scoreList[i];\r\n        setPrevPlayerScore(nowCurrentPlayer.score);\r\n      }\r\n    }\r\n    if (prevPlayerScore > nowCurrentPlayer.score) {\r\n      nowCurrentPlayer.lives -= 1;\r\n    }\r\n    if (nowCurrentPlayer.lives === 0) {\r\n      playerIsOut.push(nowCurrentPlayer);\r\n      setPlayerIsOut([...playerIsOut]);\r\n      passPlayerTurn();\r\n    } else {\r\n      changeTurns();\r\n    }\r\n\r\n    setPlayerList([...playerList]);\r\n    setCurrentPlayer(playerList[turn]);\r\n    set({\r\n      turn: turn,\r\n      playerList: JSON.parse(JSON.stringify(playerList)),\r\n      currentPlayer: JSON.parse(JSON.stringify(currentPlayer)),\r\n    });\r\n    changeTurns();\r\n    declareWinner();\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    let winner = null;\r\n    if (playerList.length === new Set(playerIsOut).size + 1) {\r\n      playerList.forEach((player) => {\r\n        if (player.lives > 0) {\r\n          winner = player.playerName;\r\n        }\r\n      });\r\n      console.log(`The winner is ${winner}`);\r\n      if (winner) {\r\n        return (\r\n          <>\r\n            <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n              <p>The WINNER is: {winner}</p>\r\n              <p>Congratulations!</p>\r\n              <Button\r\n                variant=\"success\"\r\n                className=\"m-3\"\r\n                as={Link}\r\n                to=\"/game/elimination/create\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Play Again\r\n              </Button>\r\n              <Button\r\n                variant=\"success\"\r\n                as={Link}\r\n                to=\"/game/create\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Choose another game\r\n              </Button>\r\n            </Alert>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(playerList);\r\n  }, [playerList]);\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      const number = playerScore;\r\n      if (e.key <= 57 || e.key >= 48) {\r\n        setPlayerScore(number + e.key);\r\n      }\r\n      if (e.key === \"Enter\") {\r\n        changeTurnValidate();\r\n        setPlayerScore(0);\r\n      } else if (e.key === \"Backspace\") {\r\n        deleteInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onMouseDown = (e) => {\r\n      e.preventDefault();\r\n      e.target.blur();\r\n    };\r\n    document.addEventListener(\"mousedown\", onMouseDown);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", onMouseDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {declareWinner() ? declareWinner() : <p>Total: {playerScore}</p>}\r\n      <div className=\"scoreCalculator\">\r\n        <div className=\"scoreInput\">\r\n          <div className=\"scoreKeypad\">\r\n            {getCalculatorKeys().map((keyValue, index) => (\r\n              <EliminationScoreCalculatorKey\r\n                name=\"score\"\r\n                key={index}\r\n                keyValue={keyValue}\r\n                onClick={handleScoreChange}\r\n                onChange={handleInput}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"undoRedo mt-4\">\r\n          <UndoRedo\r\n            undo={undo}\r\n            redo={redo}\r\n            set={set}\r\n            canUndo={canUndo}\r\n            canRedo={canRedo}\r\n            playerListHistory={playerListHistory}\r\n            setPlayerList={setPlayerList}\r\n            currentPlayer={currentPlayer}\r\n            setCurrentPlayer={setCurrentPlayer}\r\n            setTurn={setTurn}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nEliminationScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  turn: PropTypes.number,\r\n  resetScoreList: PropTypes.func,\r\n  setTurn: PropTypes.func,\r\n  setCurrentPlayer: PropTypes.func,\r\n  currentPlayer: PropTypes.object,\r\n  playerListHistory: PropTypes.array,\r\n  set: PropTypes.func,\r\n  undo: PropTypes.func,\r\n  redo: PropTypes.func,\r\n  canUndo: PropTypes.bool,\r\n  canRedo: PropTypes.bool,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [9, 8, 7, 6, 5, 4, 3, 2, 1, \"Del\", \"0\", \"Enter\"];\r\n};\r\n\r\nconst EliminationScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nEliminationScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default EliminationScoreCalculator;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport EliminationScoreCalculator from \"../../components/EliminationScoreCalculator\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Elimination = () => {\r\n  const {\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    getCurrentPlayerByName,\r\n    getCurrentPlayerById,\r\n    resetScoreList,\r\n    turn,\r\n    setTurn,\r\n    setCurrentPlayer,\r\n    currentPlayer,\r\n    playerListHistory,\r\n    set,\r\n    undo,\r\n    redo,\r\n    canUndo,\r\n    canRedo,\r\n  } = useGame();\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Elimination\"\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n      />\r\n      <Scoreboard\r\n        playerList={playerList}\r\n        variant=\"elimination\"\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n      />\r\n      <EliminationScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        turn={turn}\r\n        resetScoreList={resetScoreList}\r\n        setTurn={setTurn}\r\n        setCurrentPlayer={setCurrentPlayer}\r\n        currentPlayer={currentPlayer}\r\n        playerListHistory={playerListHistory}\r\n        set={set}\r\n        undo={undo}\r\n        redo={redo}\r\n        canUndo={canUndo}\r\n        canRedo={canRedo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Elimination;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Killer = () => {\r\n  const {\r\n    playerList,\r\n    // setPlayerlist,\r\n    // changeTurns,\r\n    getCurrentPlayer,\r\n    getCurrentPlayerByName,\r\n    getCurrentPlayerById,\r\n    resetScoreList,\r\n    // turn,\r\n  } = useGame();\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Killer\"\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n      />\r\n      <Scoreboard\r\n        variant=\"killer\"\r\n        playerList={playerList}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Killer;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nconst Rules = () => {\r\n  return (\r\n    <>\r\n      <Header title=\"Rules\" goBackButton />\r\n      <Accordion>\r\n        <Accordion.Item eventKey=\"0\">\r\n          <Accordion.Header>X01</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\" style={{ color: \"black\" }}>\r\n            <X01Rules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header>Baseball</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\" style={{ color: \"black\" }}>\r\n            <BaseBallRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"2\">\r\n          <Accordion.Header>Cricket</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\" style={{ color: \"black\" }}>\r\n            <CricketRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"3\">\r\n          <Accordion.Header>Elimination</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\" style={{ color: \"black\" }}>\r\n            <EliminationRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"4\">\r\n          <Accordion.Header>Killer</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\" style={{ color: \"black\" }}>\r\n            <KillerRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nconst X01Rules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> X01 is a tournament style game, where players start\r\n        with X01 points and lower their score to exactly 0. First players have\r\n        to define how many points they start with (typically 301 or 501) be can\r\n        be any number of points the players want.\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> This game can be played either by double-in and\r\n        double-out or just double out. Player take turns throwing darts into the\r\n        board, adding up their points based on their scores. Then they subtract\r\n        that from the number of points they have remaining. In order to\r\n        successfully win the game, players must hit their score exactly on 0 by\r\n        hitting a double, once this happens the game is over and that player\r\n        wins.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst BaseBallRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> Players each take turns throwing three darts, starting\r\n        with the 1. Once all players have thrown at the 1, the start of the next\r\n        round players will throw at the 2. The game continues until all players\r\n        have throw at the numbers 1 through 9 (like innings in a baseball game).\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> As players throw at the numbers 1 - 9, scoring works as\r\n        a single is 1, a double is 2, and a treble is 3. Players record their\r\n        score, and whoever has the most points at the end of the game wins.\r\n      </p>\r\n      <p>\r\n        <b>Note:</b> As we play the game, there are a few exceptions. If a\r\n        player successfully lands three darts in the number they are shooting\r\n        for (single,double or treble), then that players hits a &quot; home run\r\n        &quot; and darts are returned to hand and that player gets to re-shoot\r\n        for that number.\r\n        <br />\r\n        Also, once the 9th inning has been reached if there is a tie, then the\r\n        tieing players go into &quot; extra innings &quot;. Gameplay is then\r\n        continued onto the 10 (maybe 11, 12, etc...) in a sudden death format.\r\n        Both players shoot their 3 darts, and whoever has the most points, win.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst CricketRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> Players take turns throwing three darts at the board,\r\n        hitting the numbers 15 through 20; bulls-eye included. The game requires\r\n        players to &quot;close&quot; the numbers by hitting them three times,\r\n        once a player has all numbers &quot;closed&quot; the game ends. If a\r\n        player hits a number outside of the 15 through 20 and bulls-eye then it\r\n        doesn&apos;t have any effect to their score.\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> If a player hits a single, it accounts for 1 mark on a\r\n        number, a double counts as 2, and a treble counts as 3. Once a number\r\n        has been &quot;closed&quot; by one player, it remains open for that\r\n        player to score points on that number until all other players have\r\n        &quot;closed&quot; the number. Ultimately the player who\r\n        &quot;closes&quot; out all their numbers first win, unless another\r\n        player has accumulated points (hit an open number more then three\r\n        times). The game continues then until either the player without the\r\n        numbers &quot;closed&quot;, closes their respective numbers or the\r\n        player with all numbers &quot;closed&quot; accumulates more points.\r\n      </p>\r\n      <p>\r\n        <b>Note:</b> When it comes to the bulls-eye, a true bulls-eye is worth 2\r\n        of the 3 required marks for bull and a cow is worth 1 of the 3 required.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst EliminationRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> Players alternate throwing 3 darts at the board trying\r\n        to achieve the highest possible scoring hand. The next player must score\r\n        higher then the player in front of them, if the throwing player fails to\r\n        do that then they lose a life, but if the throwing player successfully\r\n        scores higer then they do not lose a life and the next player throws\r\n        their darts. Typically games are played with a defined number of\r\n        lives(we usually use 5). Game play continues until there is only one\r\n        player left with lives.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst KillerRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> The game begins by players throwing darts into the\r\n        board with their hand opposite for throwing. (If I was right-handed, I\r\n        would use my left hand for this.) A players number is assigned with\r\n        whatever number you successfully hit (doubles and trebles are excluded\r\n        in this). Once all players have been &quot;assigned&quot; a number game\r\n        play will begin with the player with the lowest number and counting up.\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> Players take turns shooting at their assigned numbers\r\n        (singles are 1, doubles are 2, trebles are 3), players gain lives\r\n        relative to the scoring. Once a player reaches 5 lives, they are\r\n        classified as a &quot;Killer&quot;, once a player becomes a killer they\r\n        begin then shooting towards other players numbers. If a player(s) is\r\n        unsuccessful in hitting their number prior to a player becoming a killer\r\n        they are eliminated from the game. There can be more then one killer at\r\n        a time, and game play continues until there is only one player\r\n        remaining.\r\n      </p>\r\n      <p>\r\n        <b>A few additional rules:</b> If a player has 4 lives and hits a double\r\n        of their number, they in fact do not become a killer but instead they\r\n        bring themself up to 5 then back down to 4 again. As such, if a player\r\n        is a killer and they strike their own number instead of another player\r\n        they bring their lives down equivilent to that score.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rules;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\nimport useSessionStorage from \"../../util/useSessionStorage\";\r\n\r\nconst LoginUser = () => {\r\n  const { loginUser, isLoggedIn } = useUserAPI();\r\n\r\n  const [, setSessionUsername] = useSessionStorage(\"username\", \"\");\r\n  const [, setSessionUuidToken] = useSessionStorage(\"userUuid\", \"\");\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    loginUser({ username, password });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      setSessionUsername(username);\r\n      setAlert(true);\r\n    } else {\r\n      setSessionUsername(\"\");\r\n      setSessionUuidToken(\"\");\r\n    }\r\n    return () => {\r\n      setAlert(false);\r\n    };\r\n  }, [isLoggedIn, setSessionUsername, username, setSessionUuidToken]);\r\n\r\n  useEffect(() => {\r\n    if (alert) {\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 2000);\r\n    }\r\n  }, [alert]);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Log In\" goBackButton></Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"m-3\" controlId=\"username\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            value={username}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"m-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Log In</Button>\r\n      </Form>\r\n      <p className=\"mt-5\">No account, no problem click here to register</p>\r\n      {alert && <h2>Login Successful</h2>}\r\n      <div className=\"mt-3\">\r\n        {isLoggedIn ? (\r\n          <Button as={Link} to=\"/dashboard\">\r\n            Continue\r\n          </Button>\r\n        ) : (\r\n          <Button as={Link} to=\"/game/register\">\r\n            Register\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Header from \"../../components/Header\";\r\n\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\n\r\nconst UserRegistration = () => {\r\n  const { createUser, isLoggedIn } = useUserAPI();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const noPasswordMatch = password !== passwordConfirm;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (noPasswordMatch) {\r\n      return;\r\n    } else {\r\n      createUser({ username, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"User Registration\" goBackButton />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"m-3\" controlId=\"username\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n            value={username}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"m-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n            value={password}\r\n          />\r\n        </Form.Group>\r\n        {noPasswordMatch && (\r\n          <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n            Passwords must match\r\n          </p>\r\n        )}\r\n        <Form.Group className=\"m-3\" controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => {\r\n              setPasswordConfirm(e.target.value);\r\n            }}\r\n            value={passwordConfirm}\r\n          />\r\n        </Form.Group>\r\n        {isLoggedIn ? (\r\n          <Button variant=\"primary\" as={Link} to=\"/game/login\">\r\n            Continue to login\r\n          </Button>\r\n        ) : (\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nconst CreatePlayerDashboard = ({\r\n  playerName,\r\n  setPlayerName,\r\n  createPlayer,\r\n  userId,\r\n  getPlayerByUserId,\r\n}) => {\r\n  const onCreate = (userId, playerName) => {\r\n    createPlayer(playerName, userId);\r\n    setPlayerName(\"\");\r\n    setTimeout(() => {\r\n      getPlayerByUserId(userId);\r\n    }, 20);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Container className=\"mt-5 mb-5\" fluid>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col>\r\n              <input\r\n                type=\"text\"\r\n                name=\"playerName\"\r\n                placeholder=\"Player Name\"\r\n                onChange={(e) => {\r\n                  setPlayerName(e.target.value);\r\n                }}\r\n                value={playerName}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                onClick={() => {\r\n                  onCreate(userId, playerName);\r\n                }}\r\n              >\r\n                Add Player\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePlayerDashboard;\r\n\r\nCreatePlayerDashboard.propTypes = {\r\n  playerName: PropTypes.string,\r\n  setPlayerName: PropTypes.func,\r\n  createPlayer: PropTypes.func,\r\n  userId: PropTypes.string,\r\n  getPlayerByUserId: PropTypes.func,\r\n  userPlayerList: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst CreateGameDashboard = ({\r\n  checkedPlayerList,\r\n  setPlayerList,\r\n  setCheckedPlayerList,\r\n  setUserPlayerList,\r\n}) => {\r\n  const { shufflePlayerList } = useGame();\r\n\r\n  const shufflePlayerArray = (array) => {\r\n    const newArray = shufflePlayerList(array);\r\n    console.log(newArray);\r\n    setUserPlayerList(newArray);\r\n    setCheckedPlayerList(newArray);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"m-3\">\r\n        <Row>\r\n          <Col>\r\n            <Button\r\n              as={Link}\r\n              to=\"/game/create\"\r\n              onClick={() => setPlayerList(checkedPlayerList)}\r\n            >\r\n              Create Game\r\n            </Button>\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={() => shufflePlayerArray(checkedPlayerList)}>\r\n              Random Players\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nCreateGameDashboard.propTypes = {\r\n  checkedPlayerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  setCheckedPlayerList: PropTypes.func,\r\n  setUserPlayerList: PropTypes.func,\r\n};\r\n\r\nexport default CreateGameDashboard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { BsXSquare } from \"react-icons/bs\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nexport const EditPlayerName = ({\r\n  player,\r\n  setPlayerName,\r\n  isEditable,\r\n  playerName,\r\n}) => {\r\n  if (isEditable.status && isEditable.rowKey === player.id) {\r\n    return (\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"playerName\"\r\n          value={playerName || \"\"}\r\n          onChange={(e) => setPlayerName(e.target.value)}\r\n        />\r\n      </td>\r\n    );\r\n  } else {\r\n    return <td>{player.playerName}</td>;\r\n  }\r\n};\r\n\r\nEditPlayerName.propTypes = {\r\n  player: PropTypes.object,\r\n  setPlayerName: PropTypes.func,\r\n  isEditable: PropTypes.object,\r\n  playerName: PropTypes.string,\r\n};\r\n\r\nexport const EditPlayerButton = ({\r\n  isEditable,\r\n  player,\r\n  setEditable,\r\n  setPlayerName,\r\n  updatePlayerById,\r\n  getPlayerByUserId,\r\n  userId,\r\n  playerName,\r\n}) => {\r\n  const onEdit = ({ id, playerName }) => {\r\n    setEditable({ status: true, rowKey: id });\r\n    setPlayerName(playerName);\r\n  };\r\n\r\n  const onSave = (id, { playerName }) => {\r\n    updatePlayerById(id, { playerName });\r\n    setEditable({ status: false, rowKey: null });\r\n    setTimeout(() => {\r\n      getPlayerByUserId(userId);\r\n    });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setEditable({ status: false, rowKey: null });\r\n    setPlayerName(null);\r\n  };\r\n  if (isEditable.status && isEditable.rowKey === player.id) {\r\n    return (\r\n      <td>\r\n        <Button\r\n          className=\"mx-2\"\r\n          onClick={() =>\r\n            onSave(player.id, {\r\n              playerName: playerName,\r\n              users_id: player.users_id,\r\n            })\r\n          }\r\n        >\r\n          <BiEditAlt style={{ fontSize: 20 }} />\r\n        </Button>\r\n        <Button className=\"mx-1\" variant=\"danger\" onClick={() => onCancel()}>\r\n          <BsXSquare style={{ fontSize: 20 }} />\r\n        </Button>\r\n      </td>\r\n    );\r\n  } else {\r\n    return (\r\n      <td>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          onClick={() =>\r\n            onEdit({\r\n              id: player.id,\r\n              currentPlayerName: player.playerName,\r\n            })\r\n          }\r\n        >\r\n          <BiEditAlt style={{ fontSize: 20 }} />\r\n        </Button>\r\n      </td>\r\n    );\r\n  }\r\n};\r\n\r\nEditPlayerButton.propTypes = {\r\n  player: PropTypes.object,\r\n  isEditable: PropTypes.object,\r\n  setEditable: PropTypes.func,\r\n  setPlayerName: PropTypes.func,\r\n  updatePlayerById: PropTypes.func,\r\n  getPlayerByUserId: PropTypes.func,\r\n  userId: PropTypes.string,\r\n  playerName: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\r\n\r\nimport { BsClipboardData } from \"react-icons/bs\";\r\n\r\nimport useStatsAPI from \"../../util/useStatsAPI\";\r\n\r\nconst DisplaySinglePlayerStats = ({ player }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { getStatsForSinglePlayer, singlePlayerStats } = useStatsAPI();\r\n\r\n  const onFindStats = (playerid) => {\r\n    getStatsForSinglePlayer(playerid);\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"success\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          onFindStats(player.id);\r\n        }}\r\n      >\r\n        <BsClipboardData style={{ fontSize: 20 }} />\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n        style={{ color: \"black\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{player.playerName}&apos;s Stats</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>Games Played</Col>\r\n            <Col>Games Won</Col>\r\n            <Col>Win Percentage</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>{singlePlayerStats.gamesPlayed}</Col>\r\n            <Col>{singlePlayerStats.gamesWon}</Col>\r\n            <Col>{singlePlayerStats.winPercentage}</Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplaySinglePlayerStats;\r\n\r\nDisplaySinglePlayerStats.propTypes = {\r\n  player: PropTypes.object.isRequired,\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Table } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../../contexts/Provider\";\r\n\r\nimport { BsXSquare } from \"react-icons/bs\";\r\nimport { EditPlayerButton, EditPlayerName } from \"./EditPlayer\";\r\n\r\nimport DisplaySinglePlayerStats from \"./SinglePlayerStats\";\r\n\r\nconst dashboardTableHeader = [\r\n  \"Player Name\",\r\n  \"Select Player\",\r\n  \"Edit Player\",\r\n  \"Delete Player\",\r\n  \"Player Stats\",\r\n];\r\n\r\nconst SelectPlayersFromDB = ({\r\n  checkedPlayerList,\r\n  setCheckedPlayerList,\r\n  userPlayerList,\r\n  getPlayerByUserId,\r\n  deletePlayerById,\r\n  updatePlayerById,\r\n  userId,\r\n}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <>\r\n      <Table variant={theme} bordered striped>\r\n        <thead>\r\n          <tr>\r\n            {dashboardTableHeader.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <ShowDatabasePlayerList\r\n          checkedPlayerList={checkedPlayerList}\r\n          setCheckedPlayerList={setCheckedPlayerList}\r\n          userPlayerList={userPlayerList}\r\n          getPlayerByUserId={getPlayerByUserId}\r\n          deletePlayerById={deletePlayerById}\r\n          updatePlayerById={updatePlayerById}\r\n          userId={userId}\r\n        />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nSelectPlayersFromDB.propTypes = {\r\n  checkedPlayerList: PropTypes.array,\r\n  setCheckedPlayerList: PropTypes.func,\r\n  userPlayerList: PropTypes.array,\r\n  getPlayerByUserId: PropTypes.func,\r\n  deletePlayerById: PropTypes.func,\r\n  updatePlayerById: PropTypes.func,\r\n  userId: PropTypes.string,\r\n};\r\n\r\nexport default SelectPlayersFromDB;\r\n\r\nconst ShowDatabasePlayerList = ({\r\n  checkedPlayerList,\r\n  setCheckedPlayerList,\r\n  userPlayerList,\r\n  getPlayerByUserId,\r\n  deletePlayerById,\r\n  updatePlayerById,\r\n  userId,\r\n}) => {\r\n  const [isEditable, setEditable] = useState({ status: false, rowKey: null });\r\n  const [playerName, setPlayerName] = useState(null);\r\n\r\n  const onDelete = (id) => {\r\n    deletePlayerById(id);\r\n    setTimeout(() => {\r\n      getPlayerByUserId(userId);\r\n    });\r\n  };\r\n\r\n  const onPlayerCheckbox = (player) => {\r\n    setCheckedPlayerList([\r\n      ...checkedPlayerList,\r\n      {\r\n        id: player.id,\r\n        playerName: player.playerName,\r\n        score: player.score,\r\n        scoreList: player.scoreList,\r\n        lives: player.lives,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        {userPlayerList &&\r\n          userPlayerList.map((player) => {\r\n            return (\r\n              <tr key={player.id}>\r\n                <EditPlayerName\r\n                  player={player}\r\n                  setPlayerName={setPlayerName}\r\n                  isEditable={isEditable}\r\n                  playerName={playerName}\r\n                />\r\n                <td>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    onChange={(e) => {\r\n                      if (e.target.checked) {\r\n                        onPlayerCheckbox(player);\r\n                      } else {\r\n                        setCheckedPlayerList(\r\n                          checkedPlayerList.filter(\r\n                            (removePlayer) => removePlayer.id !== player.id\r\n                          )\r\n                        );\r\n                      }\r\n                    }}\r\n                    value={checkedPlayerList}\r\n                  />\r\n                </td>\r\n                <EditPlayerButton\r\n                  isEditable={isEditable}\r\n                  player={player}\r\n                  setEditable={setEditable}\r\n                  setPlayerName={setPlayerName}\r\n                  updatePlayerById={updatePlayerById}\r\n                  getPlayerByUserId={getPlayerByUserId}\r\n                  userId={userId}\r\n                  playerName={playerName}\r\n                />\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => onDelete(player.id)}\r\n                  >\r\n                    <BsXSquare style={{ fontSize: 20 }} />\r\n                  </Button>\r\n                </td>\r\n                <td>\r\n                  <DisplaySinglePlayerStats player={player} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </>\r\n  );\r\n};\r\n\r\nShowDatabasePlayerList.propTypes = {\r\n  playerName: PropTypes.string,\r\n  checkedPlayerList: PropTypes.array,\r\n  setCheckedPlayerList: PropTypes.func,\r\n  userPlayerList: PropTypes.array,\r\n  getPlayerByUserId: PropTypes.func,\r\n  deletePlayerById: PropTypes.func,\r\n  updatePlayerById: PropTypes.func,\r\n  userId: PropTypes.string,\r\n};\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport useStatsAPI from \"./useStatsAPI\";\r\n\r\nconst URL = process.env.REACT_APP_PLAYER_URL;\r\n\r\nconst usePlayerAPI = () => {\r\n  const { createStatRowWithPlayer } = useStatsAPI();\r\n\r\n  const [userPlayerList, setUserPlayerList] = useState([]);\r\n\r\n  const createPlayer = (playerName, users_id) => {\r\n    axios\r\n      .post(`${URL}`, { playerName, users_id })\r\n      .then((res) => {\r\n        console.log(`Successfully created player: ${res.data.playerName}`);\r\n        createStatRowWithPlayer(res.data.id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const getPlayerByUserId = (userId) => {\r\n    axios\r\n      .get(`${URL}${userId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const players = res.data;\r\n        const applyDatabasePlayers = players.map((player) => {\r\n          (player.score = 0),\r\n            (player.lives = 0),\r\n            (player.scoreList = []),\r\n            (player.highScore = 0);\r\n          return player;\r\n        });\r\n        setUserPlayerList(applyDatabasePlayers);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const getPlayerByName = (playerName) => {\r\n    axios\r\n      .get(`${URL}byName/${playerName}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const updatePlayerById = (playerId, { playerName, users_id }) => {\r\n    axios\r\n      .put(`${URL}${playerId}`, { playerName, users_id })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const deletePlayerById = (playerId) => {\r\n    axios\r\n      .delete(`${URL}${playerId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  return {\r\n    createPlayer,\r\n    getPlayerByUserId,\r\n    updatePlayerById,\r\n    deletePlayerById,\r\n    userPlayerList,\r\n    setUserPlayerList,\r\n    getPlayerByName,\r\n  };\r\n};\r\n\r\nexport default usePlayerAPI;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  displaySessionUserUuidToken,\r\n  displaySessionUsername,\r\n} from \"../../util/useSessionStorage\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport LoginUser from \"./LogIn\";\r\nimport CreatePlayerDashboard from \"./CreatePlayerDashboard\";\r\nimport CreateGameDashboard from \"./CreateGameDashboard\";\r\nimport SelectPlayersFromDB from \"./ShowPlayersFromDB\";\r\n\r\nimport useGame from \"../../util/useGame\";\r\nimport usePlayerAPI from \"../../util/usePlayerAPI\";\r\n\r\nconst Dashboard = () => {\r\n  const username = displaySessionUsername();\r\n  const userId = displaySessionUserUuidToken();\r\n\r\n  const {\r\n    userPlayerList,\r\n    createPlayer,\r\n    getPlayerByUserId,\r\n    deletePlayerById,\r\n    updatePlayerById,\r\n    setUserPlayerList,\r\n  } = usePlayerAPI();\r\n\r\n  const { setPlayerList, checkedPlayerList, setCheckedPlayerList } = useGame();\r\n\r\n  const [playerName, setPlayerName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getPlayerByUserId(userId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!username) {\r\n    return <LoginUser />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Dashboard\"\r\n        username={username}\r\n        goBackButton\r\n        loginDropDown\r\n      />\r\n      <CreatePlayerDashboard\r\n        playerName={playerName}\r\n        setPlayerName={setPlayerName}\r\n        createPlayer={createPlayer}\r\n        userId={userId}\r\n        getPlayerByUserId={getPlayerByUserId}\r\n        userPlayerList={userPlayerList}\r\n      />\r\n      {checkedPlayerList.length >= 2 && (\r\n        <CreateGameDashboard\r\n          checkedPlayerList={checkedPlayerList}\r\n          setPlayerList={setPlayerList}\r\n          setCheckedPlayerList={setCheckedPlayerList}\r\n          setUserPlayerList={setUserPlayerList}\r\n        />\r\n      )}\r\n      <SelectPlayersFromDB\r\n        playerName={playerName}\r\n        checkedPlayerList={checkedPlayerList}\r\n        setCheckedPlayerList={setCheckedPlayerList}\r\n        userPlayerList={userPlayerList}\r\n        getPlayerByUserId={getPlayerByUserId}\r\n        deletePlayerById={deletePlayerById}\r\n        updatePlayerById={updatePlayerById}\r\n        userId={userId}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\nimport { displaySessionUserUuidToken } from \"../../util/useSessionStorage\";\r\n\r\nconst EditUserInfo = () => {\r\n  const userId = displaySessionUserUuidToken();\r\n\r\n  const { loginUser, updateUserById } = useUserAPI();\r\n\r\n  const [userCredentials, setUserCredentials] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [currentUserPassword, setCurrentUserPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const noPasswordMatch = password !== passwordConfirm;\r\n\r\n  const handleSubmit = (userId, { username, password }) => {\r\n    updateUserById(userId, { username, password });\r\n    sessionStorage.setItem(\"username\", JSON.stringify(username));\r\n  };\r\n\r\n  const checkUserCredentials = (username, password) => {\r\n    loginUser({ username, password });\r\n    if (loginUser) {\r\n      setUserCredentials(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"m-3\" controlId=\"username\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n            value={username}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"m-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Current Password\"\r\n            onChange={(e) => {\r\n              setCurrentUserPassword(e.target.value);\r\n            }}\r\n            value={currentUserPassword}\r\n          />\r\n        </Form.Group>\r\n\r\n        {userCredentials && (\r\n          <Form.Group className=\"m-3\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n        {noPasswordMatch && (\r\n          <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n            Passwords must match\r\n          </p>\r\n        )}\r\n        {userCredentials && (\r\n          <Form.Group className=\"m-3\" controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm New Password\"\r\n              onChange={(e) => {\r\n                setPasswordConfirm(e.target.value);\r\n              }}\r\n              value={passwordConfirm}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n        {userCredentials ? (\r\n          <Button\r\n            variant=\"primary\"\r\n            as={Link}\r\n            to=\"/dashboard\"\r\n            onClick={() => {\r\n              handleSubmit(userId, { username, password });\r\n            }}\r\n          >\r\n            Edit User Info\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              checkUserCredentials(username, currentUserPassword);\r\n            }}\r\n          >\r\n            Confirm Credentials\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\nimport {\r\n  displaySessionUsername,\r\n  displaySessionUserUuidToken,\r\n} from \"../../util/useSessionStorage\";\r\n\r\nconst DeleteUser = () => {\r\n  const { deleteUserById } = useUserAPI();\r\n  const username = displaySessionUsername();\r\n  const userId = displaySessionUserUuidToken();\r\n\r\n  const handleDelete = (userId) => {\r\n    deleteUserById(userId);\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>Are you sure you would like to delete {username}?</p>\r\n      <Button\r\n        as={Link}\r\n        to=\"/game/login\"\r\n        onClick={() => {\r\n          handleDelete(userId);\r\n        }}\r\n      >\r\n        Delete User\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteUser;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport CreatePlayerList from \"./screens/CreatePlayer\";\r\nimport {\r\n  CreateGame,\r\n  X01GameSelection,\r\n  EliminationSetUp,\r\n  KillerSetUp,\r\n} from \"./screens/CreateGame\";\r\nimport Cricket from \"./screens/games/Cricket\";\r\nimport Baseball from \"./screens/games/Baseball\";\r\nimport X01 from \"./screens/games/X01\";\r\nimport Elimination from \"./screens/games/Elimination\";\r\nimport Killer from \"./screens/games/Killer\";\r\nimport Rules from \"./screens/games/Rules\";\r\nimport LoginUser from \"./screens/dashboard/LogIn\";\r\nimport UserRegistration from \"./screens/dashboard/Register\";\r\nimport Dashboard from \"./screens/dashboard/Dashboard\";\r\nimport EditUserInfo from \"./screens/dashboard/EditUser\";\r\nimport DeleteUser from \"./screens/dashboard/DeleteUser\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Router basename=\"/dart-scoreboard\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/game/create\" component={CreateGame} />\r\n        <Route path=\"/create_player\" component={CreatePlayerList} />\r\n        <Route exact path=\"/game/cricket\" component={Cricket} />\r\n        <Route exact path=\"/game/baseball\" component={Baseball} />\r\n        <Route exact path=\"/game/x01\" component={X01} />\r\n        <Route exact path=\"/game/elimination\" component={Elimination} />\r\n        <Route exact path=\"/game/killer\" component={Killer} />\r\n        <Route path=\"/game/x01/create\" component={X01GameSelection} />\r\n        <Route path=\"/game/elimination/create\" component={EliminationSetUp} />\r\n        <Route path=\"/game/killer/create\" component={KillerSetUp} />\r\n        <Route path=\"/rules\" component={Rules} />\r\n        <Route path=\"/game/login\" component={LoginUser} />\r\n        <Route path=\"/game/register\" component={UserRegistration} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/user/edit\" component={EditUserInfo} />\r\n        <Route path=\"/user/delete\" component={DeleteUser} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\nimport { ThemeContext } from \"./Provider\";\r\n\r\nexport const themes = {\r\n  dark: {\r\n    body: \"#363537\",\r\n    text: \"#E2E2E2\",\r\n    toggleBorder: \"#6B8096\",\r\n    gradient: \"linear-gradient(#091236, #1E215D)\",\r\n  },\r\n  light: {\r\n    body: \"#E2E2E2\",\r\n    text: \"#363537\",\r\n    toggleBorder: \"#FFF\",\r\n    gradient: \"linear-gradient(#39598A, #79D7ED)\",\r\n  },\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n}`;\r\n\r\nconst Theme = ({ children }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  return (\r\n    <ThemeProvider theme={themes[theme]}>\r\n      <GlobalStyle />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nTheme.propTypes = { children: PropTypes.element };\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Routes from \"./Routes\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Theme from \"./contexts/theme\";\r\n\r\nimport { ThemeProvider } from \"./contexts/Provider\";\r\nimport { PingProvider } from \"./contexts/PingProvider\";\r\n\r\nReactDOM.render(\r\n  <ThemeProvider>\r\n    <Theme>\r\n      <PingProvider>\r\n        <React.StrictMode>\r\n          <Routes />\r\n        </React.StrictMode>\r\n      </PingProvider>\r\n    </Theme>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}