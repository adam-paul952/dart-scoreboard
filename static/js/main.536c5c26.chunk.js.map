{"version":3,"sources":["reportWebVitals.js","util/useLocalStorage.js","contexts/Provider.js","contexts/Toggler.js","components/X01OutChart.js","util/useSessionStorage.js","util/useStatsAPI.js","screens/dashboard/AllPlayerStats.js","components/Header.js","contexts/PingProvider.js","util/useUserAPI.js","App.js","util/useGame.js","screens/CreatePlayer.js","screens/CreateGame.js","components/CricketScoreCalculator.js","components/ScoreBoard.js","screens/games/Cricket.js","components/ScoreCalculator.js","screens/games/Baseball.js","components/X01ScoreCalculator.js","screens/games/X01.js","components/EliminationScoreCalculator.js","screens/games/Elimination.js","screens/games/Killer.js","screens/games/Rules.js","screens/dashboard/LogIn.js","screens/dashboard/Register.js","screens/dashboard/CreatePlayerDashboard.js","screens/dashboard/CreateGameDashboard.js","screens/dashboard/EditPlayer.js","screens/dashboard/SinglePlayerStats.js","screens/dashboard/ShowPlayersFromDB.js","util/usePlayerAPI.js","screens/dashboard/Dashboard.js","screens/dashboard/EditUser.js","screens/dashboard/DeleteUser.js","Routes.js","contexts/theme.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","setItem","stringify","ThemeContext","createContext","ThemeProvider","children","theme","setTheme","useEffect","localTheme","Provider","Toggle","useContext","oppositeTheme","Button","style","width","variant","onClick","fontSize","X01OutShotChart","Table","striped","bordered","hover","X01OutShotScore","outShotScore","map","index","outShotItems","join","X01OutShotButton","show","setShow","size","Modal","fullscreen","onHide","Header","closeButton","Title","Body","displaySessionUsername","sessionStorage","displaySessionUserUuidToken","useSessionStorage","defaultValue","err","URL","useStatsAPI","allPlayerStats","setAllPlayerStats","singlePlayerStats","setSinglePlayerStats","createStatRowWithPlayer","playerId","axios","post","res","data","message","catch","getStatsForAllPlayers","userId","get","getStatsForSinglePlayer","player","updateAllPlayerStats","put","updateWinningPlayerStats","DisplayAllPlayerStatsButton","color","Row","Col","playerName","id","gamesPlayed","gamesWon","winPercentage","title","goBackButton","resetButton","resetScoreList","switchThemeButton","outShotButton","loginDropDown","username","history","useHistory","themeToggle","Container","Navbar","className","goBack","Brand","handleLogout","clear","onclick","HeaderDropDownMenu","DropdownButton","menuVariant","Dropdown","Item","href","Divider","PingContext","PingProvider","ping","setPing","useUserAPI","isLoggedIn","setIsLoggedIn","setSessionUuidToken","createUser","password","loginUser","uuid","toString","alert","updateUserById","userUuid","deleteUserById","delete","params","getPingFromServer","timeout","StyledLink","styled","Link","StyledButton","App","setTimeout","to","useGame","playerList","setPlayerList","turn","setTurn","x01Points","setX01Points","addPlayer","deletePlayer","rowNumber","updatedRows","splice","changeTurns","length","getCurrentPlayer","x01GameSelect","assignX01PlayerScore","playerScore","i","score","assignPlayerLives","playerLives","numberOfPlayerLives","lives","Number","newScoreList","scoreList","hitCount","getCurrentPlayerByName","getCurrentPlayerById","PlayerList","removeRow","CreatePlayerList","initialState","Math","floor","random","playerObject","setPlayerObject","onKeyUp","e","preventDefault","onAddPlayer","document","addEventListener","removeEventListener","fluid","type","name","placeholder","onChange","target","as","disabled","CreateGame","Menu","eventKey","X01GameSelection","onSelect","game","KillerSetUp","EliminationSetUp","setPlayerLives","numOfLives","getCalculatorKeys","CricketScoreCalculatorKey","props","ButtonGroup","keyValue","CricketScoreCalculator","playerScoreList","setPlayerScoreList","targets","handleInput","number","push","handleScoreChange","changeTurnValidate","currentPlayer","forEach","changeTurn","calculatePlayerScore","declareWinner","newScoreArray","countedScore","filter","hitNum","newScore","reduce","a","b","winner","every","Alert","fontWeight","inningNumber","cricketNumbers","eliminationHeader","killerHeader","TableHeader","inning","PlayerData","currentPlayerById","Error","X01PlayerData","CricketPlayerData","hitTargets","hitTarget","CricketScoreboardDisplay","BaseballPlayerData","sum","current","EliminationPlayerData","KillerPlayerData","borderColor","Scoreboard","Cricket","ScoreCalculatorKey","ScoreCalculator","round","setRound","setPlayerScore","deleteInput","parseInt","isNaN","changeNumberOfRounds","eraseGameData","totalRounds","winnerScore","totalScore","Baseball","X01ScoreCalculator","X01","EliminationScoreCalculatorKey","EliminationScoreCalculator","prevPlayerScore","setPrevPlayerScore","playerIsOut","setPlayerIsOut","Set","Elimination","Killer","X01Rules","BaseBallRules","CricketRules","EliminationRules","KillerRules","Rules","Accordion","LoginUser","setSessionUsername","setUsername","setPassword","setAlert","Form","onSubmit","Group","controlId","Label","Control","UserRegistration","passwordConfirm","setPasswordConfirm","noPasswordMatch","CreatePlayerDashboard","setPlayerName","createPlayer","getPlayerByUserId","onCreate","CreateGameDashboard","checkedPlayerList","EditPlayerName","isEditable","status","rowKey","EditPlayerButton","setEditable","updatePlayerById","onSave","users_id","onEdit","currentPlayerName","DisplaySinglePlayerStats","playerid","dashboardTableHeader","SelectPlayersFromDB","setCheckedPlayerList","userPlayerList","deletePlayerById","ShowDatabasePlayerList","Check","checked","onPlayerCheckbox","removePlayer","usePlayerAPI","setUserPlayerList","applyDatabasePlayers","getPlayerByName","Dashboard","EditUserInfo","userCredentials","setUserCredentials","currentUserPassword","setCurrentUserPassword","handleSubmit","checkUserCredentials","DeleteUser","handleDelete","Routes","basename","exact","path","component","themes","dark","body","text","toggleBorder","gradient","light","GlobalStyle","createGlobalStyle","Theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.536c5c26.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useEffect, createContext } from \"react\";\r\nimport useLocalStorage from \"../util/useLocalStorage\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"light\");\r\n\r\n  useEffect(() => {\r\n    const localTheme = JSON.parse(localStorage.getItem(\"theme\"));\r\n    localTheme && setTheme(localTheme);\r\n  }, [theme, setTheme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        theme,\r\n        setTheme: () => setTheme(theme === \"dark\" ? \"light\" : \"dark\"),\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nThemeProvider.propTypes = { children: PropTypes.element };\r\n\r\nexport { ThemeProvider, ThemeContext };\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { ThemeContext } from \"./Provider\";\r\nimport { BsFillBrightnessHighFill } from \"react-icons/bs\";\r\nimport { FaMoon } from \"react-icons/fa\";\r\n\r\nconst Toggle = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n  const oppositeTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n  return (\r\n    <Button\r\n      style={{ width: \"150px\" }}\r\n      variant={oppositeTheme}\r\n      onClick={setTheme}\r\n    >\r\n      {theme === \"light\" ? (\r\n        <BsFillBrightnessHighFill style={{ fontSize: \"1.5rem\" }} />\r\n      ) : (\r\n        <FaMoon style={{ fontSize: \"1.25rem\" }} />\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  theme: PropTypes.string,\r\n};\r\n\r\nexport default Toggle;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button, Table, Modal } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\n\r\nconst X01OutShotButton = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          setShow(true);\r\n        }}\r\n      >\r\n        Outshots\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        fullscreen={true}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>OutChart</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <X01OutShotChart />\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst X01OutShotChart = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const oppositeTheme = theme === \"light\" ? \"light\" : \"dark\";\r\n  return (\r\n    <>\r\n      <Table variant={oppositeTheme} striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Score</th>\r\n            <th>Outshot Available</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <X01OutShotScore />\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nconst X01OutShotScore = () => {\r\n  return (\r\n    <>\r\n      {outShotScore.map((value, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{value}</td>\r\n            <td>{outShotItems[index].join(\" -- \")}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst outShotScore = [\r\n  170, 167, 164, 161, 160, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149,\r\n  148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134,\r\n  133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119,\r\n  118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104,\r\n  103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 87, 86, 85,\r\n  84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66,\r\n  65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47,\r\n  46, 45, 44, 43, 42, 41,\r\n];\r\n\r\nconst outShotItems = [\r\n  [\"T20\", \"T20\", \"Bull\"],\r\n  [\"T20\", \"T19\", \"Bull\"],\r\n  [\"T20\", \"T18\", \"Bull\"],\r\n  [\"T20\", \"T17\", \"Bull\"],\r\n  [\"T20\", \"T20\", \"D20\"],\r\n  [\"T20\", \"T20\", \"D19\"],\r\n  [\"T20\", \"T19\", \"D20\"],\r\n  [\"T20\", \"T20\", \"D18\"],\r\n  [\"T20\", \"T15\", \"Bull\"],\r\n  [\"T20\", \"T18\", \"D20\"],\r\n  [\"T20\", \"T19\", \"D18\"],\r\n  [\"T20\", \"T20\", \"D16\"],\r\n  [\"T20\", \"T17\", \"D20\"],\r\n  [\"T20\", \"T18\", \"D18\"],\r\n  [\"T20\", \"T19\", \"D16\"],\r\n  [\"T20\", \"T16\", \"D20\"],\r\n  [\"T20\", \"T17\", \"D18\"],\r\n  [\"T20\", \"T18\", \"D16\"],\r\n  [\"T20\", \"T15\", \"D20\"],\r\n  [\"T20\", \"T20\", \"D12\"],\r\n  [\"T20\", \"T17\", \"D16\"],\r\n  [\"T20\", \"T14\", \"D20\"],\r\n  [\"T20\", \"T15\", \"D18\"],\r\n  [\"T20\", \"T16\", \"D16\"],\r\n  [\"T20\", \"T13\", \"D20\"],\r\n  [\"T20\", \"T14\", \"D18\"],\r\n  [\"T17\", \"T18\", \"D16\"],\r\n  [\"T20\", \"T20\", \"D8\"],\r\n  [\"T20\", \"T15\", \"D15\"],\r\n  [\"T20\", \"T14\", \"D16\"],\r\n  [\"T20\", \"T19\", \"D8\"],\r\n  [\"T20\", \"T20\", \"D6\"],\r\n  [\"T20\", \"T13\", \"D16\"],\r\n  [\"T20\", \"T18\", \"D8\"],\r\n  [\"T19\", \"T20\", \"D6\"],\r\n  [\"T18\", \"T14\", \"D16\"],\r\n  [\"T19\", \"T18\", \"D8\"],\r\n  [\"T20\", \"T16\", \"D8\"],\r\n  [\"Bull\", \"T20\", \"D20\"],\r\n  [\"T20\", \"D16\", \"D16\"],\r\n  [\"T19\", \"T16\", \"D8\"],\r\n  [\"T18\", \"T20\", \"D4\"],\r\n  [\"T20\", \"T15\", \"D8\"],\r\n  [\"T20\", \"20\", \"D20\"],\r\n  [\"T19\", \"T10\", \"D16\"],\r\n  [\"T20\", \"18\", \"D20\"],\r\n  [\"T20\", \"17\", \"D20\"],\r\n  [\"T20\", \"16\", \"D20\"],\r\n  [\"T20\", \"15\", \"D20\"],\r\n  [\"T20\", \"14\", \"D20\"],\r\n  [\"T20\", \"13\", \"D20\"],\r\n  [\"T20\", \"20\", \"D16\"],\r\n  [\"T20\", \"19\", \"D16\"],\r\n  [\"T20\", \"18\", \"D16\"],\r\n  [\"T20\", \"17\", \"D16\"],\r\n  [\"T20\", \"16\", \"D16\"],\r\n  [\"T19\", \"18\", \"D16\"],\r\n  [\"T20\", \"14\", \"D16\"],\r\n  [\"T20\", \"13\", \"D16\"],\r\n  [\"T18\", \"18\", \"D16\"],\r\n  [\"T20\", \"11\", \"D16\"],\r\n  [\"T20\", \"10\", \"D16\"],\r\n  [\"T17\", \"18\", \"D16\"],\r\n  [\"T20\", \"D20\"],\r\n  [\"T19\", \"10\", \"D16\"],\r\n  [\"T20\", \"D19\"],\r\n  [\"T19\", \"D20\"],\r\n  [\"T20\", \"D18\"],\r\n  [\"T15\", \"18\", \"D16\"],\r\n  [\"T18\", \"D20\"],\r\n  [\"T19\", \"D18\"],\r\n  [\"T20\", \"D16\"],\r\n  [\"T17\", \"D20\"],\r\n  [\"T18\", \"D18\"],\r\n  [\"T19\", \"D16\"],\r\n  [\"T16\", \"D20\"],\r\n  [\"T17\", \"D18\"],\r\n  [\"T18\", \"D16\"],\r\n  [\"T15\", \"D20\"],\r\n  [\"T20\", \"D12\"],\r\n  [\"T17\", \"D16\"],\r\n  [\"T14\", \"D20\"],\r\n  [\"T15\", \"D18\"],\r\n  [\"T16\", \"D16\"],\r\n  [\"T13\", \"D20\"],\r\n  [\"T14\", \"D18\"],\r\n  [\"T15\", \"D16\"],\r\n  [\"T20\", \"D8\"],\r\n  [\"T15\", \"D15\"],\r\n  [\"T14\", \"D16\"],\r\n  [\"T19\", \"D8\"],\r\n  [\"T20\", \"D6\"],\r\n  [\"T13\", \"D16\"],\r\n  [\"T18\", \"D8\"],\r\n  [\"T19\", \"D6\"],\r\n  [\"T16\", \"D10\"],\r\n  [\"T17\", \"D8\"],\r\n  [\"T10\", \"D18\"],\r\n  [\"T15\", \"D10\"],\r\n  [\"D16\", \"D16\"],\r\n  [\"T13\", \"D12\"],\r\n  [\"T10\", \"D16\"],\r\n  [\"T15\", \"D8\"],\r\n  [\"20\", \"D20\"],\r\n  [\"19\", \"D20\"],\r\n  [\"18\", \"D20\"],\r\n  [\"17\", \"D20\"],\r\n  [\"16\", \"D20\"],\r\n  [\"15\", \"D20\"],\r\n  [\"14\", \"D20\"],\r\n  [\"13\", \"D20\"],\r\n  [\"20\", \"D16\"],\r\n  [\"19\", \"D16\"],\r\n  [\"18\", \"D16\"],\r\n  [\"17\", \"D16\"],\r\n  [\"16\", \"D16\"],\r\n  [\"15\", \"D16\"],\r\n  [\"14\", \"D16\"],\r\n  [\"13\", \"D16\"],\r\n  [\"12\", \"D16\"],\r\n  [\"11\", \"D16\"],\r\n  [\"10\", \"D16\"],\r\n  [\"9\", \"D16\"],\r\n];\r\n\r\nexport default X01OutShotButton;\r\n","import { useState } from \"react\";\r\n\r\nconst useSessionStorage = (key, defaultValue) => {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = sessionStorage.getItem(key);\r\n      return item ? JSON.parse(item) : defaultValue;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return defaultValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport const displaySessionUsername = () => {\r\n  const usernameToken = JSON.parse(sessionStorage.getItem(\"username\"));\r\n  return usernameToken;\r\n};\r\n\r\nexport const displaySessionUserUuidToken = () => {\r\n  const userIdToken = JSON.parse(sessionStorage.getItem(\"userUuid\"));\r\n  return userIdToken;\r\n};\r\n\r\nexport default useSessionStorage;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst URL = \"http://localhost:8080/playerStats/\";\r\n\r\nconst useStatsAPI = () => {\r\n  const createStatRowWithPlayer = (playerId) => {\r\n    axios\r\n      .post(`${URL}${playerId}`)\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const [allPlayerStats, setAllPlayerStats] = useState([]);\r\n\r\n  const getStatsForAllPlayers = (userId) => {\r\n    axios\r\n      .get(`${URL}byUser/${userId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setAllPlayerStats(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const [singlePlayerStats, setSinglePlayerStats] = useState([]);\r\n\r\n  const getStatsForSinglePlayer = (playerId) => {\r\n    axios\r\n      .get(`${URL}byPlayer/${playerId}`)\r\n      .then((res) => {\r\n        let player = res.data[0];\r\n        console.log(player);\r\n        setSinglePlayerStats(player);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const updateAllPlayerStats = () => {\r\n    axios\r\n      .put(URL)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const updateWinningPlayerStats = (playerId) => {\r\n    axios\r\n      .put(`${URL}${playerId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  return {\r\n    createStatRowWithPlayer,\r\n    getStatsForAllPlayers,\r\n    getStatsForSinglePlayer,\r\n    updateAllPlayerStats,\r\n    updateWinningPlayerStats,\r\n    singlePlayerStats,\r\n    setAllPlayerStats,\r\n    allPlayerStats,\r\n  };\r\n};\r\n\r\nexport default useStatsAPI;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\r\nimport { displaySessionUserUuidToken } from \"../../util/useSessionStorage\";\r\nimport useStatsAPI from \"../../util/useStatsAPI\";\r\n\r\nconst DisplayAllPlayerStatsButton = () => {\r\n  const userId = displaySessionUserUuidToken();\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { getStatsForAllPlayers, allPlayerStats } = useStatsAPI();\r\n\r\n  const onFindAllStats = () => {\r\n    getStatsForAllPlayers(userId);\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          onFindAllStats();\r\n        }}\r\n      >\r\n        All Player Stats\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n        style={{ color: \"black\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>All Stats</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>Player Name</Col>\r\n            <Col>Games Played</Col>\r\n            <Col>Games Won</Col>\r\n            <Col>Win Percentage</Col>\r\n          </Row>\r\n          {allPlayerStats.map((player) => {\r\n            return (\r\n              <>\r\n                <Row key={player.id}>\r\n                  <Col key={player.id}>{player.playerName}</Col>\r\n                  <Col key={player.id}>{player.gamesPlayed}</Col>\r\n                  <Col key={player.id}>{player.gamesWon}</Col>\r\n                  <Col key={player.id}>{player.winPercentage}</Col>\r\n                </Row>\r\n              </>\r\n            );\r\n          })}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayAllPlayerStatsButton;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Navbar,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\n\r\nimport { BsSkipBackward } from \"react-icons/bs\";\r\n\r\nimport Toggle from \"../contexts/Toggler\";\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\nimport X01OutShotButton from \"./X01OutChart\";\r\nimport DisplayAllPlayerStatsButton from \"../screens/dashboard/AllPlayerStats\";\r\n\r\nconst Header = ({\r\n  title,\r\n  goBackButton,\r\n  resetButton,\r\n  resetScoreList,\r\n  switchThemeButton,\r\n  outShotButton,\r\n  loginDropDown,\r\n  username,\r\n}) => {\r\n  const history = useHistory();\r\n  const { theme, themeToggle } = useContext(ThemeContext);\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Navbar variant={theme} className=\"mb-5 justify-content-between\">\r\n          {goBackButton && (\r\n            <Button\r\n              onClick={() => history.goBack()}\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n            >\r\n              <BsSkipBackward />\r\n              Go back\r\n            </Button>\r\n          )}\r\n          <Navbar.Brand>{title}</Navbar.Brand>\r\n          {outShotButton && <X01OutShotButton />}\r\n          {loginDropDown && (\r\n            <HeaderDropDownMenu\r\n              handleLogout={handleLogout}\r\n              theme={theme}\r\n              themeToggle={themeToggle}\r\n              username={username}\r\n            />\r\n          )}\r\n          {resetButton && (\r\n            <Button\r\n              onClick={() => resetScoreList()}\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n            >\r\n              Reset Game\r\n            </Button>\r\n          )}\r\n          {switchThemeButton && <Toggle theme={theme} onclick={themeToggle} />}\r\n        </Navbar>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  goBackButton: PropTypes.bool,\r\n  resetButton: PropTypes.bool,\r\n  resetScoreList: PropTypes.func,\r\n  switchThemeButton: PropTypes.bool,\r\n  outShotButton: PropTypes.bool,\r\n  loginDropDown: PropTypes.bool,\r\n  username: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n\r\nconst HeaderDropDownMenu = ({ handleLogout, theme, themeToggle, username }) => {\r\n  return (\r\n    <>\r\n      <DropdownButton className=\"px-3\" title={username} menuVariant={theme}>\r\n        <Dropdown.Item>\r\n          <DisplayAllPlayerStatsButton />\r\n        </Dropdown.Item>\r\n        <Dropdown.Item href=\"/user/edit\">Edit User</Dropdown.Item>\r\n        <Dropdown.Item href=\"/user/delete\">Delete User</Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        <Dropdown.Item href=\"/game/login\" onClick={handleLogout}>\r\n          LogOut\r\n        </Dropdown.Item>\r\n        <Dropdown.Item>\r\n          <Toggle theme={theme} onclick={themeToggle} />\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nHeaderDropDownMenu.propTypes = {\r\n  handleLogout: PropTypes.func,\r\n  theme: PropTypes.string,\r\n  themeToggle: PropTypes.func,\r\n  username: PropTypes.string,\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PingContext = createContext();\r\n\r\nconst PingProvider = ({ children }) => {\r\n  const [ping, setPing] = useState(null);\r\n\r\n  return (\r\n    <PingContext.Provider value={{ ping, setPing }}>\r\n      {children}\r\n    </PingContext.Provider>\r\n  );\r\n};\r\n\r\nPingProvider.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport { PingProvider, PingContext };\r\n","import axios from \"axios\";\r\nimport { useContext, useState } from \"react\";\r\nimport { PingContext } from \"../contexts/PingProvider\";\r\n\r\nimport useSessionStorage from \"./useSessionStorage\";\r\n\r\nconst URL = \"http://localhost:8080/users/\";\r\n\r\nconst useUserAPI = () => {\r\n  const { setPing } = useContext(PingContext);\r\n\r\n  const createUser = ({ username, password }) => {\r\n    axios\r\n      .post(URL, { username, password })\r\n      .then((res) => {\r\n        setIsLoggedIn(true);\r\n        console.log(`Successfully created user: ${res.data.username}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [, setSessionUuidToken] = useSessionStorage(\"userUuid\", \"\");\r\n\r\n  const loginUser = ({ username, password }) => {\r\n    axios\r\n      .post(`${URL}login`, { username, password })\r\n      .then((res) => {\r\n        setIsLoggedIn(true);\r\n        setSessionUuidToken(res.data.uuid.toString());\r\n        console.log(`Successfully logged in user: ${res.data.username}`);\r\n      })\r\n      .catch((err) => {\r\n        alert(`Unsuccessful login`);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const updateUserById = (userUuid, { username, password }) => {\r\n    axios\r\n      .put(`${URL}${userUuid}`, { username, password })\r\n      .then((res) => {\r\n        console.log(`Successfully updated user: ${res.data.username}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const deleteUserById = (userUuid) => {\r\n    axios\r\n      .delete(`${URL}${userUuid}`, { params: userUuid })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const getPingFromServer = () => {\r\n    axios\r\n      .get(`${URL}ping`, { timeout: 2000 })\r\n      .then((res) => {\r\n        console.log(res.data.message);\r\n        setPing(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Not connected to server`);\r\n        console.log(`Error: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  return {\r\n    createUser,\r\n    loginUser,\r\n    updateUserById,\r\n    deleteUserById,\r\n    isLoggedIn,\r\n    setIsLoggedIn,\r\n    getPingFromServer,\r\n  };\r\n};\r\n\r\nexport default useUserAPI;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"./contexts/Provider\";\r\nimport { PingContext } from \"./contexts/PingProvider\";\r\nimport useUserAPI from \"./util/useUserAPI\";\r\n\r\nconst StyledLink = styled(Link)`\r\ntext-decoration: none;\r\n\r\n    &:focus, &:hover, &:visited, &:link, &:active {\r\n        text-decoration: none;\r\n        `;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin: 2px;\r\n  display: flex;\r\n  width: 300px;\r\n  border: 2px solid black;\r\n  justify-content: center;\r\n  font-size: 25px;\r\n  flex-direction: row;\r\n  border-radius: 10px;\r\n`;\r\n\r\nfunction App() {\r\n  const { getPingFromServer } = useUserAPI();\r\n  const { theme } = useContext(ThemeContext);\r\n  const { ping } = useContext(PingContext);\r\n  const oppositeTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      getPingFromServer();\r\n    });\r\n  }, [getPingFromServer]);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Dart Scoreboard\" switchThemeButton />\r\n      <div className=\"btnTable\">\r\n        {ping && (\r\n          <StyledLink to=\"/game/login\">\r\n            <StyledButton variant={oppositeTheme}>Log In</StyledButton>\r\n          </StyledLink>\r\n        )}\r\n        <StyledLink to=\"/create_player\">\r\n          <StyledButton variant={oppositeTheme}>Continue as Guest</StyledButton>\r\n        </StyledLink>\r\n        <StyledLink to=\"/rules\">\r\n          <StyledButton variant={oppositeTheme}>Rules</StyledButton>\r\n        </StyledLink>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\nimport useLocalStorage from \"./useLocalStorage\";\r\nimport useSessionStorage from \"./useSessionStorage\";\r\n\r\nconst useGame = () => {\r\n  // Main array to hold player objects\r\n  const [playerList, setPlayerList] = useSessionStorage(\"listOfPlayers\", []);\r\n\r\n  const addPlayer = (playerName) => {\r\n    setPlayerList([...playerList, playerName]);\r\n  };\r\n\r\n  const deletePlayer = (rowNumber) => {\r\n    let updatedRows = [...playerList];\r\n    updatedRows.splice(rowNumber, 1);\r\n    setPlayerList(updatedRows);\r\n  };\r\n\r\n  // Set turns and methods to cycle through players and rounds\r\n  const [turn, setTurn] = useState(0);\r\n\r\n  const changeTurns = () => {\r\n    const newTurn = turn + 1;\r\n    setTurn(newTurn % playerList.length);\r\n  };\r\n\r\n  const getCurrentPlayer = () => {\r\n    return playerList[turn];\r\n  };\r\n\r\n  const getCurrentPlayerByName = () => {\r\n    return playerList[turn].player;\r\n  };\r\n\r\n  const getCurrentPlayerById = () => {\r\n    return playerList[turn].id;\r\n  };\r\n\r\n  // Set X01 points to game and players\r\n  const [x01Points, setX01Points] = useLocalStorage(\"x01Points\", 0);\r\n\r\n  const x01GameSelect = (value) => {\r\n    setX01Points(value);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(`X01 points are ${x01Points}`);\r\n  // }, [x01Points]);\r\n\r\n  const assignX01PlayerScore = (x01Points) => {\r\n    let playerScore = [...playerList];\r\n    for (let i = 0; i < playerScore.length; i++) {\r\n      playerScore[i].score = x01Points;\r\n      setPlayerList(playerScore);\r\n    }\r\n  };\r\n\r\n  const assignPlayerLives = (playerLives) => {\r\n    let numberOfPlayerLives = [...playerList];\r\n    for (let i = 0; i < numberOfPlayerLives.length; i++) {\r\n      numberOfPlayerLives[i].lives = Number(playerLives);\r\n      setPlayerList(numberOfPlayerLives);\r\n    }\r\n  };\r\n\r\n  const resetScoreList = () => {\r\n    let newScoreList = [...playerList];\r\n    for (let i = 0; i < newScoreList.length; i++) {\r\n      newScoreList[i].scoreList = [];\r\n      newScoreList[i].score = 0;\r\n      newScoreList[i].lives = 0;\r\n      newScoreList[i].hitCount = {};\r\n      setPlayerList(newScoreList);\r\n      setTurn(0);\r\n    }\r\n  };\r\n  return {\r\n    playerList,\r\n    turn,\r\n    x01Points,\r\n    setX01Points,\r\n    addPlayer,\r\n    deletePlayer,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    x01GameSelect,\r\n    assignX01PlayerScore,\r\n    assignPlayerLives,\r\n    resetScoreList,\r\n    setPlayerList,\r\n    setTurn,\r\n    getCurrentPlayerByName,\r\n    getCurrentPlayerById,\r\n  };\r\n};\r\n\r\nexport default useGame;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport { Button, Container, Col, Row, Table } from \"react-bootstrap\";\r\nimport useGame from \"../util/useGame\";\r\n\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\n\r\nconst CreatePlayerList = () => {\r\n  const { playerList, addPlayer, deletePlayer } = useGame();\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const initialState = {\r\n    id: Math.floor(Math.random() * 100),\r\n    playerName: \"\",\r\n    score: 0,\r\n    scoreList: [],\r\n    lives: 0,\r\n  };\r\n  const [playerObject, setPlayerObject] = useState(initialState);\r\n  const { playerName } = playerObject;\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      if (e.key === \"Enter\") {\r\n        e.preventDefault();\r\n        onAddPlayer();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  const onHandleChange = ({ target: { name, value } }) => {\r\n    setPlayerObject({ ...playerObject, [name]: value });\r\n  };\r\n\r\n  const onAddPlayer = () => {\r\n    addPlayer(playerObject);\r\n    setPlayerObject(initialState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Create Player\" goBackButton />\r\n      <Container className=\"mt-5 mb-5\" fluid>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"playerName\"\r\n              placeholder=\"Player Name\"\r\n              onChange={onHandleChange}\r\n              value={playerName}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Button onClick={onAddPlayer}>Add Player</Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container className=\"mt-5 mb-5\" fluid>\r\n        <Table variant={theme} bordered striped>\r\n          <thead>\r\n            <tr>\r\n              <th>Player #</th>\r\n              <th>Player Name</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {playerList.map((player, index) => {\r\n              return (\r\n                <PlayerList\r\n                  key={index}\r\n                  index={index}\r\n                  player={player}\r\n                  deletePlayer={deletePlayer}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n\r\n      <Button\r\n        as={Link}\r\n        to=\"/game/create\"\r\n        disabled={playerList.length < 2 ? true : false}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const PlayerList = ({ index, player, deletePlayer }) => {\r\n  let playerName = player.playerName;\r\n\r\n  const removeRow = (index) => {\r\n    deletePlayer(index);\r\n  };\r\n\r\n  return (\r\n    <tr key={index + 1}>\r\n      <th>{index + 1}</th>\r\n      <td>{playerName}</td>\r\n      <td>\r\n        <Button variant=\"danger\" size=\"sm\" onClick={() => removeRow(index)}>\r\n          Delete\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nPlayerList.propTypes = {\r\n  index: PropTypes.number,\r\n  player: PropTypes.object,\r\n  deletePlayer: PropTypes.func,\r\n};\r\n\r\nexport default CreatePlayerList;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Dropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../components/Header\";\r\nimport useGame from \"../util/useGame\";\r\n\r\nexport const CreateGame = () => {\r\n  return (\r\n    <>\r\n      <Header title=\"Create a Game\" goBackButton />\r\n      <form>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            id=\"gameDropDown\"\r\n            variant=\"primary\"\r\n            title=\"Game DropDown\"\r\n          >\r\n            Please Select a Game\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu variant=\"primary\">\r\n            <Dropdown.Item as={Link} to=\"/game/x01/create\" eventKey=\"X01\">\r\n              X01\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/game/baseball/\" eventKey=\"Baseball\">\r\n              Baseball\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to=\"/game/elimination/create\"\r\n              eventKey=\"Elimination\"\r\n            >\r\n              Elimination\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/game/killer/create\" eventKey=\"Killer\">\r\n              Killer\r\n            </Dropdown.Item>\r\n            <Dropdown.Item as={Link} to=\"/game/cricket\" eventKey=\"Cricket\">\r\n              Cricket\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport function X01GameSelection() {\r\n  const { x01Points, setX01Points, x01GameSelect, assignX01PlayerScore } =\r\n    useGame();\r\n\r\n  const x01PointsList = [201, 301, 401, 501, 601, 701];\r\n\r\n  const onPointsSubmit = () => {\r\n    x01GameSelect(x01Points);\r\n    assignX01PlayerScore(x01Points);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"X01\" goBackButton />\r\n      <Dropdown value={x01Points} onSelect={setX01Points}>\r\n        <Dropdown.Toggle\r\n          id=\"pointsDropdown\"\r\n          variant=\"primary\"\r\n          name=\"pointsDropdown\"\r\n          className=\"m-5\"\r\n        >\r\n          Points\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu variant=\"primary\">\r\n          {x01PointsList.map((game) => {\r\n            return (\r\n              <Dropdown.Item key={game} eventKey={game}>\r\n                {game}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <h2 className=\"m-5\">Game selected: {x01Points}</h2>\r\n      <Button\r\n        className=\"mt-2\"\r\n        variant=\"primary\"\r\n        as={Link}\r\n        to=\"/game/x01\"\r\n        onClick={onPointsSubmit}\r\n        disabled={x01Points === 0 ? true : false}\r\n      >\r\n        Continue to Game\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const KillerSetUp = () => {\r\n  return (\r\n    <>\r\n      <Header title=\"Killer\" goBackButton />\r\n      <h1>Coming Soon!</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const EliminationSetUp = () => {\r\n  const { assignPlayerLives } = useGame();\r\n  const eliminationLives = [3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n  const [playerLives, setPlayerLives] = useState(0);\r\n\r\n  const onLifeSelect = (eventKey) => {\r\n    setPlayerLives(eventKey);\r\n  };\r\n\r\n  const onPointsSubmit = () => {\r\n    assignPlayerLives(playerLives);\r\n  };\r\n  return (\r\n    <>\r\n      <Header title=\"Elimination\" goBackButton />\r\n      <Dropdown value={playerLives} onSelect={onLifeSelect}>\r\n        <Dropdown.Toggle\r\n          id=\"livesDropdown\"\r\n          variant=\"primary\"\r\n          name=\"livesDropdown\"\r\n          className=\"m-5\"\r\n        >\r\n          Lives\r\n        </Dropdown.Toggle>\r\n        <Dropdown.Menu variant=\"primary\">\r\n          {eliminationLives.map((numOfLives) => {\r\n            return (\r\n              <Dropdown.Item key={numOfLives} eventKey={numOfLives}>\r\n                {numOfLives}\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n      <h2 className=\"m-5\">Number of Lives Selected: {playerLives}</h2>\r\n      <Button\r\n        className=\"m-2\"\r\n        variant=\"primary\"\r\n        as={Link}\r\n        to=\"/game/elimination\"\r\n        onClick={onPointsSubmit}\r\n        disabled={playerLives === 0 ? true : false}\r\n      >\r\n        Continue to Game\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nEliminationSetUp.propTypes = { assignPlayerLives: PropTypes.func };\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Container, Button, ButtonGroup } from \"react-bootstrap\";\r\n\r\nconst CricketScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  getCurrentPlayer,\r\n  resetScoreList,\r\n}) => {\r\n  const [playerScoreList, setPlayerScoreList] = useState([]);\r\n  const targets = [20, 19, 18, 17, 16, 15, 25];\r\n\r\n  const handleInput = (number) => {\r\n    playerScoreList.push(number);\r\n    setPlayerScoreList([...playerScoreList]);\r\n  };\r\n\r\n  const deleteScore = () => {\r\n    setPlayerScoreList([]);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n    } else if (value === \"Del\") {\r\n      deleteScore();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const currentPlayer = getCurrentPlayer();\r\n\r\n  const changeTurnValidate = () => {\r\n    playerScoreList.forEach((score) => {\r\n      if (score === \"Bull\") {\r\n        currentPlayer.scoreList.push(25);\r\n        setPlayerScoreList([]);\r\n      } else {\r\n        currentPlayer.scoreList.push(score);\r\n        setPlayerScoreList([]);\r\n      }\r\n    });\r\n    changeTurn();\r\n  };\r\n\r\n  const changeTurn = () => {\r\n    changeTurns();\r\n    setPlayerList([...playerList]);\r\n    calculatePlayerScore();\r\n    declareWinner();\r\n  };\r\n\r\n  const calculatePlayerScore = () => {\r\n    let newScoreArray = [];\r\n    for (let i = 0; i < targets.length; i++) {\r\n      let countedScore = currentPlayer.scoreList.filter(\r\n        (hitNum) => hitNum === targets[i]\r\n      );\r\n      countedScore.splice(0, 3);\r\n      let newScore = countedScore.reduce((a, b) => a + b, 0);\r\n      newScoreArray.push(newScore);\r\n    }\r\n    currentPlayer.score = newScoreArray.reduce((a, b) => a + b, 0);\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    let winner = null;\r\n    // let winningScore = -1;\r\n\r\n    const countPlayerArray = targets.map((target) => {\r\n      const playerArrayOccurences = currentPlayer.scoreList.filter(\r\n        (hitNum) => hitNum === target\r\n      ).length;\r\n      return playerArrayOccurences;\r\n    });\r\n\r\n    if (\r\n      countPlayerArray.every((value) => value >= 3) &&\r\n      currentPlayer.score > 0\r\n    ) {\r\n      winner = currentPlayer.player;\r\n      console.log(`Winner is ${winner}`);\r\n\r\n      if (winner) {\r\n        return (\r\n          <>\r\n            <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n              <p>The WINNER is: {winner}</p>\r\n              <p>Congratulations!</p>\r\n              <Button\r\n                variant=\"success\"\r\n                className=\"m-3\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Play Again\r\n              </Button>\r\n              <Button\r\n                variant=\"success\"\r\n                as={Link}\r\n                to=\"/game/create\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Choose another game\r\n              </Button>\r\n            </Alert>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <p>Total: {playerScoreList.toString()}</p>\r\n        {declareWinner()}\r\n        <div className=\"scoreCalculator\">\r\n          <div className=\"scoreKeypad\">\r\n            {getCalculatorKeys().map((keyValue, index) => (\r\n              <CricketScoreCalculatorKey\r\n                name=\"score\"\r\n                key={index}\r\n                keyValue={keyValue}\r\n                onChange={handleInput}\r\n                onClick={handleScoreChange}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nCricketScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  getCurrentPlayer: PropTypes.func,\r\n  resetScoreList: PropTypes.func,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [20, 19, 18, 17, 16, 15, \"Del\", \"Bull\", \"Enter\"];\r\n};\r\n\r\nconst CricketScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nCricketScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default CricketScoreCalculator;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { BiCaretLeft } from \"react-icons/bi\";\r\nimport { AiOutlineCloseCircle, AiOutlineClose } from \"react-icons/ai\";\r\nimport { BsSlash } from \"react-icons/bs\";\r\n\r\nimport { ThemeContext } from \"../contexts/Provider\";\r\n\r\nconst Scoreboard = ({\r\n  playerList,\r\n  x01Points,\r\n  getCurrentPlayer,\r\n  getCurrentPlayerById,\r\n  variant,\r\n}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const currentPlayer = getCurrentPlayer();\r\n  const currentPlayerById = getCurrentPlayerById();\r\n\r\n  return (\r\n    <>\r\n      <Table variant={theme} bordered striped size=\"sm\">\r\n        <TableHeader variant={variant} />\r\n        <PlayerData\r\n          playerList={playerList}\r\n          variant={variant}\r\n          x01Points={x01Points}\r\n          currentPlayer={currentPlayer}\r\n          currentPlayerById={currentPlayerById}\r\n        />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nScoreboard.propTypes = {\r\n  variant: PropTypes.string,\r\n  playerList: PropTypes.array,\r\n  x01Points: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  getCurrentPlayer: PropTypes.func,\r\n  getCurrentPlayerByName: PropTypes.func,\r\n  getCurrentPlayerById: PropTypes.func,\r\n};\r\n\r\nconst inningNumber = [\"Player\", 1, 2, 3, 4, 5, 6, 7, 8, 9, \"Total\"];\r\nconst cricketNumbers = [\"Player\", 20, 19, 18, 17, 16, 15, \"Bull\", \"Score\"];\r\nconst eliminationHeader = [\"Player\", \"Score\", \"Lives\"];\r\nconst killerHeader = [\"Player\", \"Player #\", \"Lives\", \"Killer\"];\r\n\r\nconst TableHeader = ({ variant }) => {\r\n  return (\r\n    <>\r\n      <thead>\r\n        <tr>\r\n          {variant === \"baseball\" &&\r\n            inningNumber.map((inning, index) => {\r\n              return <th key={index}>{inning}</th>;\r\n            })}\r\n          {variant === \"cricket\" &&\r\n            cricketNumbers.map((number, index) => {\r\n              return <th key={index}>{number}</th>;\r\n            })}\r\n          {variant === \"elimination\" &&\r\n            eliminationHeader.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n          {variant === \"killer\" &&\r\n            killerHeader.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n        </tr>\r\n      </thead>\r\n    </>\r\n  );\r\n};\r\n\r\nTableHeader.propTypes = { variant: PropTypes.string };\r\n\r\nconst PlayerData = ({\r\n  playerList,\r\n  variant,\r\n  currentPlayer,\r\n  currentPlayerById,\r\n}) => {\r\n  return (\r\n    <>\r\n      <tbody>\r\n        {playerList.map((player, index) => {\r\n          switch (variant) {\r\n            case \"baseball\":\r\n              return (\r\n                <BaseballPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"cricket\":\r\n              return (\r\n                <CricketPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"x01\":\r\n              return (\r\n                <X01PlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"elimination\":\r\n              return (\r\n                <EliminationPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            case \"killer\":\r\n              return (\r\n                <KillerPlayerData\r\n                  key={index}\r\n                  player={player}\r\n                  index={index}\r\n                  currentPlayer={currentPlayer}\r\n                  currentPlayerById={currentPlayerById}\r\n                />\r\n              );\r\n            default:\r\n              throw new Error(\"Invalid variant!\");\r\n          }\r\n        })}\r\n      </tbody>\r\n    </>\r\n  );\r\n};\r\n\r\nPlayerData.propTypes = {\r\n  playerList: PropTypes.array,\r\n  variant: PropTypes.string,\r\n  currentPlayer: PropTypes.object,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst X01PlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th>{player.playerName}</th>\r\n      )}\r\n      <td>{player.score}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nX01PlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst CricketPlayerData = ({ player, index, currentPlayerById }) => {\r\n  const hitTargets = [\r\n    player.scoreList.filter((hitNum) => hitNum === 20).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 19).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 18).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 17).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 16).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 15).length,\r\n    player.scoreList.filter((hitNum) => hitNum === 25).length,\r\n  ];\r\n\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th key={index}>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th key={index}>{player.playerName}</th>\r\n      )}\r\n      {hitTargets.map((hitTarget, index) => {\r\n        return (\r\n          <td key={index}>\r\n            <CricketScoreboardDisplay player={player} hitTarget={hitTarget} />\r\n          </td>\r\n        );\r\n      })}\r\n      <td>{player.score}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nCricketPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst CricketScoreboardDisplay = ({ hitTarget }) => {\r\n  if (hitTarget === 1) {\r\n    return <BsSlash style={{ fontSize: \"25px\" }} />;\r\n  } else if (hitTarget === 2) {\r\n    return <AiOutlineClose style={{ fontSize: \"20px\" }} />;\r\n  } else if (hitTarget >= 3) {\r\n    return <AiOutlineCloseCircle style={{ fontSize: \"28px\" }} />;\r\n  }\r\n  return null;\r\n};\r\n\r\nCricketScoreboardDisplay.propTypes = {\r\n  player: PropTypes.object,\r\n  hitTarget: PropTypes.number,\r\n};\r\n\r\nconst BaseballPlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th>{player.playerName}</th>\r\n      )}\r\n      <td>{player.scoreList[0]}</td>\r\n      <td>{player.scoreList[1]}</td>\r\n      <td>{player.scoreList[2]}</td>\r\n      <td>{player.scoreList[3]}</td>\r\n      <td>{player.scoreList[4]}</td>\r\n      <td>{player.scoreList[5]}</td>\r\n      <td>{player.scoreList[6]}</td>\r\n      <td>{player.scoreList[7]}</td>\r\n      <td>{player.scoreList[8]}</td>\r\n      <td>{player.scoreList.reduce((sum, current) => sum + current, 0)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nBaseballPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayer: PropTypes.object,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst EliminationPlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th>\r\n          {player.player}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th>{player.playerName}</th>\r\n      )}\r\n      <td>{player.score}</td>\r\n      <td>{player.lives}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nEliminationPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nconst KillerPlayerData = ({ player, index, currentPlayerById }) => {\r\n  return (\r\n    <tr key={index}>\r\n      {currentPlayerById === player.id ? (\r\n        <th style={{ borderColor: \"black\" }}>\r\n          {player.playerName}\r\n          <BiCaretLeft size={20} />\r\n        </th>\r\n      ) : (\r\n        <th style={{ borderColor: \"black\" }}>{player.playerName}</th>\r\n      )}\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nKillerPlayerData.propTypes = {\r\n  player: PropTypes.object,\r\n  index: PropTypes.number,\r\n  currentPlayerById: PropTypes.number,\r\n};\r\n\r\nexport default Scoreboard;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport CricketScoreCalculator from \"../../components/CricketScoreCalculator\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Cricket = () => {\r\n  const {\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    resetScoreList,\r\n    turn,\r\n    getCurrentPlayerById,\r\n    getCurrentPlayerByName,\r\n  } = useGame();\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Cricket\"\r\n        resetScoreList={resetScoreList}\r\n        goBackButton\r\n        resetButton\r\n      />\r\n      <Scoreboard\r\n        playerList={playerList}\r\n        variant=\"cricket\"\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n      />\r\n      <CricketScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        turn={turn}\r\n        resetScoreList={resetScoreList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cricket;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\n\r\nconst ScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  getCurrentPlayer,\r\n  resetScoreList,\r\n  round,\r\n  setRound,\r\n}) => {\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n\r\n  const handleInput = (number) => {\r\n    setPlayerScore(`${playerScore}${number}`);\r\n  };\r\n\r\n  const deleteInput = () => {\r\n    setPlayerScore(0);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n      setPlayerScore(0);\r\n    } else if (value === \"Del\") {\r\n      deleteInput();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const changeTurnValidate = () => {\r\n    const score = parseInt(playerScore, 10);\r\n    if (!isNaN(score)) {\r\n      changeTurn(score);\r\n    }\r\n  };\r\n\r\n  const changeTurn = (score) => {\r\n    let currentPlayer = getCurrentPlayer();\r\n    currentPlayer.scoreList.push(score);\r\n    setPlayerList([...playerList]);\r\n    changeTurns();\r\n    changeNumberOfRounds();\r\n    declareWinner();\r\n  };\r\n  const changeNumberOfRounds = () => {\r\n    setRound(round + 1);\r\n  };\r\n\r\n  const eraseGameData = () => {\r\n    resetScoreList();\r\n    setRound(0);\r\n  };\r\n  const declareWinner = () => {\r\n    const totalRounds = Math.floor(playerList.length * 9);\r\n    if (round === totalRounds) {\r\n      let [winnerScore, winner] = [-1, null];\r\n      playerList.forEach((player) => {\r\n        const totalScore = player.scoreList.reduce((a, b) => a + b, 0);\r\n        if (totalScore > winnerScore) {\r\n          winnerScore = totalScore;\r\n          winner = player.playerName;\r\n        }\r\n      });\r\n      return (\r\n        <>\r\n          <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n            <p>The WINNER is: {winner}</p>\r\n            <p>Congratulations!</p>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"m-3\"\r\n              onClick={() => eraseGameData()}\r\n            >\r\n              Play Again\r\n            </Button>\r\n            <Button\r\n              variant=\"success\"\r\n              as={Link}\r\n              to=\"/game/create\"\r\n              onClick={() => eraseGameData()}\r\n            >\r\n              Choose another game\r\n            </Button>\r\n          </Alert>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      const number = parseInt(playerScore, 10);\r\n      if (e.key <= 57 || e.key >= 48) {\r\n        setPlayerScore(number + e.key);\r\n      }\r\n      if (e.key === \"Enter\") {\r\n        changeTurnValidate();\r\n        setPlayerScore(0);\r\n      } else if (e.key === \"Backspace\") {\r\n        deleteInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {declareWinner() ? declareWinner() : <p>Total: {playerScore}</p>}\r\n      <div className=\"scoreCalculator\">\r\n        <div className=\"scoreInput\">\r\n          <div className=\"scoreKeypad\">\r\n            {!declareWinner() &&\r\n              getCalculatorKeys().map((keyValue, index) => (\r\n                <ScoreCalculatorKey\r\n                  name=\"score\"\r\n                  key={index}\r\n                  keyValue={keyValue}\r\n                  onClick={handleScoreChange}\r\n                  onChange={handleInput}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  getCurrentPlayer: PropTypes.func,\r\n  resetScoreList: PropTypes.func,\r\n  turn: PropTypes.number,\r\n  round: PropTypes.number,\r\n  setRound: PropTypes.func,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [9, 8, 7, 6, 5, 4, 3, 2, 1, \"Del\", \"0\", \"Enter\"];\r\n};\r\n\r\nconst ScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default ScoreCalculator;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport ScoreCalculator from \"../../components/ScoreCalculator\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Baseball = () => {\r\n  const {\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    resetScoreList,\r\n    turn,\r\n    getCurrentPlayerById,\r\n    getCurrentPlayerByName,\r\n  } = useGame();\r\n\r\n  const [round, setRound] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Baseball\"\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n      />\r\n      <Scoreboard\r\n        playerList={playerList}\r\n        variant=\"baseball\"\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        round={round}\r\n      />\r\n      <ScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        setRound={setRound}\r\n        round={round}\r\n        turn={turn}\r\n        resetScoreList={resetScoreList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Baseball;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\n\r\nconst X01ScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  getCurrentPlayer,\r\n  resetScoreList,\r\n}) => {\r\n  const [playerScore, setPlayerScore] = useState(\"\");\r\n\r\n  const handleInput = (number) => {\r\n    setPlayerScore(`${playerScore}${number}`);\r\n  };\r\n\r\n  const deleteInput = () => {\r\n    setPlayerScore(\"\");\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n      setPlayerScore(\"\");\r\n    } else if (value === \"Del\") {\r\n      deleteInput();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const changeTurnValidate = () => {\r\n    const score = parseInt(playerScore, 10);\r\n    if (score > 180) {\r\n      alert(`Score cannot exceed 180!`);\r\n      setPlayerScore(\"\");\r\n    } else {\r\n      if (!isNaN(score)) {\r\n        changeTurn(score);\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeTurn = (score) => {\r\n    let currentPlayer = getCurrentPlayer();\r\n    currentPlayer.score -= score;\r\n    setPlayerList([...playerList]);\r\n    changeTurns();\r\n    declareWinner();\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    let winner = null;\r\n    playerList.forEach((player) => {\r\n      if (player.score <= 0) {\r\n        player.score = 0;\r\n        winner = player.player;\r\n      }\r\n    });\r\n    if (!winner) {\r\n      return (\r\n        <>\r\n          <p>Total: {playerScore}</p>\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n          <p>The WINNER is: {winner}</p>\r\n          <p>Congratulations!</p>\r\n          <Button\r\n            variant=\"success\"\r\n            as={Link}\r\n            to=\"/game/x01/create\"\r\n            className=\"m-3\"\r\n            onClick={() => resetScoreList()}\r\n          >\r\n            Play Again\r\n          </Button>\r\n          <Button\r\n            variant=\"success\"\r\n            as={Link}\r\n            to=\"/game/create\"\r\n            onClick={() => resetScoreList()}\r\n          >\r\n            Choose another game\r\n          </Button>\r\n        </Alert>\r\n      </>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      const number = playerScore;\r\n      if (e.key <= 57 || e.key >= 48) {\r\n        setPlayerScore(number + e.key);\r\n      }\r\n      if (e.key === \"Enter\") {\r\n        changeTurnValidate();\r\n        setPlayerScore(\"\");\r\n      } else if (e.key === \"Backspace\") {\r\n        deleteInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {declareWinner()}\r\n      <div className=\"scoreCalculator\">\r\n        <div className=\"scoreKeypad\">\r\n          {getCalculatorKeys().map((keyValue, index) => (\r\n            <ScoreCalculatorKey\r\n              name=\"score\"\r\n              key={index}\r\n              keyValue={keyValue}\r\n              onClick={handleScoreChange}\r\n              onChange={handleInput}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nX01ScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  getCurrentPlayer: PropTypes.func,\r\n  resetScoreList: PropTypes.func,\r\n  assignX01PlayerScore: PropTypes.func,\r\n  x01Points: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [9, 8, 7, 6, 5, 4, 3, 2, 1, \"Del\", \"0\", \"Enter\"];\r\n};\r\n\r\nconst ScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default X01ScoreCalculator;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport X01ScoreCalculator from \"../../components/X01ScoreCalculator\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst X01 = () => {\r\n  const {\r\n    x01Points,\r\n    assignX01PlayerScore,\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    resetScoreList,\r\n    getCurrentPlayer,\r\n    getCurrentPlayerById,\r\n    getCurrentPlayerByName,\r\n  } = useGame();\r\n  return (\r\n    <>\r\n      <Header\r\n        title={x01Points}\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n        outShotButton\r\n      />\r\n      <Scoreboard\r\n        variant=\"x01\"\r\n        x01Points={x01Points}\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n      />\r\n      <X01ScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        assignX01PlayerScore={assignX01PlayerScore}\r\n        resetScoreList={resetScoreList}\r\n        x01Points={x01Points}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default X01;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Alert, Button, ButtonGroup } from \"react-bootstrap\";\r\n\r\nconst EliminationScoreCalculator = ({\r\n  playerList,\r\n  setPlayerList,\r\n  changeTurns,\r\n  turn,\r\n  resetScoreList,\r\n}) => {\r\n  const [playerScore, setPlayerScore] = useState(0);\r\n  const [prevPlayerScore, setPrevPlayerScore] = useState(-1);\r\n  const [playerIsOut, setPlayerIsOut] = useState([]);\r\n\r\n  const handleInput = (number) => {\r\n    setPlayerScore(`${playerScore}${number}`);\r\n  };\r\n\r\n  const deleteInput = () => {\r\n    setPlayerScore(0);\r\n  };\r\n\r\n  const handleScoreChange = (value) => {\r\n    if (value === \"Enter\") {\r\n      changeTurnValidate();\r\n      setPlayerScore(0);\r\n    } else if (value === \"Del\") {\r\n      deleteInput();\r\n    } else {\r\n      handleInput(value);\r\n    }\r\n  };\r\n\r\n  const changeTurnValidate = () => {\r\n    const score = parseInt(playerScore, 10);\r\n    if (!isNaN(score)) {\r\n      changeTurn(score);\r\n    }\r\n  };\r\n\r\n  const passPlayerTurn = () => {\r\n    changeTurns();\r\n  };\r\n\r\n  const changeTurn = (score) => {\r\n    let currentPlayer = playerList[turn];\r\n\r\n    if (currentPlayer.lives !== 0) {\r\n      currentPlayer.scoreList.push(score);\r\n      for (let i = 0; i < currentPlayer.scoreList.length; i++) {\r\n        currentPlayer.score = currentPlayer.scoreList[i];\r\n        setPrevPlayerScore(currentPlayer.score);\r\n      }\r\n    }\r\n    if (prevPlayerScore > currentPlayer.score) {\r\n      currentPlayer.lives -= 1;\r\n    }\r\n    if (currentPlayer.lives === 0) {\r\n      playerIsOut.push(currentPlayer);\r\n      setPlayerIsOut([...playerIsOut]);\r\n      passPlayerTurn();\r\n      console.log(playerIsOut);\r\n    } else {\r\n      changeTurns();\r\n    }\r\n\r\n    setPlayerList([...playerList]);\r\n\r\n    changeTurns();\r\n    declareWinner();\r\n  };\r\n\r\n  const declareWinner = () => {\r\n    let winner = null;\r\n    if (playerList.length === new Set(playerIsOut).size + 1) {\r\n      playerList.forEach((player) => {\r\n        if (player.lives > 0) {\r\n          winner = player.player;\r\n        }\r\n      });\r\n      console.log(`The winner is ${winner}`);\r\n      if (winner) {\r\n        return (\r\n          <>\r\n            <Alert variant=\"success\" style={{ fontWeight: \"bold\" }}>\r\n              <p>The WINNER is: {winner}</p>\r\n              <p>Congratulations!</p>\r\n              <Button\r\n                variant=\"success\"\r\n                className=\"m-3\"\r\n                as={Link}\r\n                to=\"/game/elimination/create\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Play Again\r\n              </Button>\r\n              <Button\r\n                variant=\"success\"\r\n                as={Link}\r\n                to=\"/game/create\"\r\n                onClick={() => resetScoreList()}\r\n              >\r\n                Choose another game\r\n              </Button>\r\n            </Alert>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(playerList);\r\n  }, [playerList]);\r\n\r\n  useEffect(() => {\r\n    const onKeyUp = (e) => {\r\n      const number = playerScore;\r\n      if (e.key <= 57 || e.key >= 48) {\r\n        setPlayerScore(number + e.key);\r\n      }\r\n      if (e.key === \"Enter\") {\r\n        changeTurnValidate();\r\n        setPlayerScore(0);\r\n      } else if (e.key === \"Backspace\") {\r\n        deleteInput();\r\n      }\r\n    };\r\n    document.addEventListener(\"keyup\", onKeyUp);\r\n    return () => {\r\n      document.removeEventListener(\"keyup\", onKeyUp);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {declareWinner() ? declareWinner() : <p>Total: {playerScore}</p>}\r\n      <div className=\"scoreCalculator\">\r\n        <div className=\"scoreInput\">\r\n          <div className=\"scoreKeypad\">\r\n            {getCalculatorKeys().map((keyValue, index) => (\r\n              <EliminationScoreCalculatorKey\r\n                name=\"score\"\r\n                key={index}\r\n                keyValue={keyValue}\r\n                onClick={handleScoreChange}\r\n                onChange={handleInput}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nEliminationScoreCalculator.propTypes = {\r\n  playerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n  changeTurns: PropTypes.func,\r\n  turn: PropTypes.number,\r\n  resetScoreList: PropTypes.func,\r\n};\r\n\r\nconst getCalculatorKeys = () => {\r\n  return [9, 8, 7, 6, 5, 4, 3, 2, 1, \"Del\", \"0\", \"Enter\"];\r\n};\r\n\r\nconst EliminationScoreCalculatorKey = (props) => {\r\n  return (\r\n    <ButtonGroup\r\n      onChange={() => {\r\n        props.onChange(props.keyValue);\r\n      }}\r\n    >\r\n      <Button variant=\"primary\" onClick={() => props.onClick(props.keyValue)}>\r\n        {props.keyValue}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nEliminationScoreCalculatorKey.propTypes = {\r\n  keyValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onChange: () => {},\r\n  onClick: () => {},\r\n};\r\n\r\nexport default EliminationScoreCalculator;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport EliminationScoreCalculator from \"../../components/EliminationScoreCalculator\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Elimination = () => {\r\n  const {\r\n    playerList,\r\n    setPlayerList,\r\n    changeTurns,\r\n    getCurrentPlayer,\r\n    getCurrentPlayerByName,\r\n    getCurrentPlayerById,\r\n    resetScoreList,\r\n    turn,\r\n  } = useGame();\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Elimination\"\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n      />\r\n      <Scoreboard\r\n        playerList={playerList}\r\n        variant=\"elimination\"\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n      />\r\n      <EliminationScoreCalculator\r\n        playerList={playerList}\r\n        setPlayerList={setPlayerList}\r\n        changeTurns={changeTurns}\r\n        turn={turn}\r\n        resetScoreList={resetScoreList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Elimination;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport Scoreboard from \"../../components/ScoreBoard\";\r\nimport useGame from \"../../util/useGame\";\r\n\r\nconst Killer = () => {\r\n  const {\r\n    playerList,\r\n    // setPlayerlist,\r\n    // changeTurns,\r\n    getCurrentPlayer,\r\n    getCurrentPlayerByName,\r\n    getCurrentPlayerById,\r\n    resetScoreList,\r\n    // turn,\r\n  } = useGame();\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Killer\"\r\n        goBackButton\r\n        resetButton\r\n        resetScoreList={resetScoreList}\r\n      />\r\n      <Scoreboard\r\n        variant=\"killer\"\r\n        playerList={playerList}\r\n        getCurrentPlayer={getCurrentPlayer}\r\n        getCurrentPlayerById={getCurrentPlayerById}\r\n        getCurrentPlayerByName={getCurrentPlayerByName}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Killer;\r\n","import React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nconst Rules = () => {\r\n  return (\r\n    <>\r\n      <Header title=\"Rules\" goBackButton />\r\n      <Accordion>\r\n        <Accordion.Item eventKey=\"0\">\r\n          <Accordion.Header>X01</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\">\r\n            <X01Rules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"1\">\r\n          <Accordion.Header>Baseball</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\">\r\n            <BaseBallRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"2\">\r\n          <Accordion.Header>Cricket</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\">\r\n            <CricketRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"3\">\r\n          <Accordion.Header>Elimination</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\">\r\n            <EliminationRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n        <Accordion.Item eventKey=\"4\">\r\n          <Accordion.Header>Killer</Accordion.Header>\r\n          <Accordion.Body className=\"text-start\">\r\n            <KillerRules />\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nconst X01Rules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> X01 is a tournament style game, where players start\r\n        with X01 points and lower their score to exactly 0. First players have\r\n        to define how many points they start with (typically 301 or 501) be can\r\n        be any number of points the players want.\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> This game can be played either by double-in and\r\n        double-out or just double out. Player take turns throwing darts into the\r\n        board, adding up their points based on their scores. Then they subtract\r\n        that from the number of points they have remaining. In order to\r\n        successfully win the game, players must hit their score exactly on 0 by\r\n        hitting a double, once this happens the game is over and that player\r\n        wins.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst BaseBallRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> Players each take turns throwing three darts, starting\r\n        with the 1. Once all players have thrown at the 1, the start of the next\r\n        round players will throw at the 2. The game continues until all players\r\n        have throw at the numbers 1 through 9 (like innings in a baseball game).\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> As players throw at the numbers 1 - 9, scoring works as\r\n        a single is 1, a double is 2, and a treble is 3. Players record their\r\n        score, and whoever has the most points at the end of the game wins.\r\n      </p>\r\n      <p>\r\n        <b>Note:</b> As we play the game, there are a few exceptions. If a\r\n        player successfully lands three darts in the number they are shooting\r\n        for (single,double or treble), then that players hits a &quot; home run\r\n        &quot; and darts are returned to hand and that player gets to re-shoot\r\n        for that number.\r\n        <br />\r\n        Also, once the 9th inning has been reached if there is a tie, then the\r\n        tieing players go into &quot; extra innings &quot;. Gameplay is then\r\n        continued onto the 10 (maybe 11, 12, etc...) in a sudden death format.\r\n        Both players shoot their 3 darts, and whoever has the most points, win.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst CricketRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> Players take turns throwing three darts at the board,\r\n        hitting the numbers 15 through 20; bulls-eye included. The game requires\r\n        players to &quot;close&quot; the numbers by hitting them three times,\r\n        once a player has all numbers &quot;closed&quot; the game ends. If a\r\n        player hits a number outside of the 15 through 20 and bulls-eye then it\r\n        doesn&apos;t have any effect to their score.\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> If a player hits a single, it accounts for 1 mark on a\r\n        number, a double counts as 2, and a treble counts as 3. Once a number\r\n        has been &quot;closed&quot; by one player, it remains open for that\r\n        player to score points on that number until all other players have\r\n        &quot;closed&quot; the number. Ultimately the player who\r\n        &quot;closes&quot; out all their numbers first win, unless another\r\n        player has accumulated points (hit an open number more then three\r\n        times). The game continues then until either the player without the\r\n        numbers &quot;closed&quot;, closes their respective numbers or the\r\n        player with all numbers &quot;closed&quot; accumulates more points.\r\n      </p>\r\n      <p>\r\n        <b>Note:</b> When it comes to the bulls-eye, a true bulls-eye is worth 2\r\n        of the 3 required marks for bull and a cow is worth 1 of the 3 required.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst EliminationRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> Players alternate throwing 3 darts at the board trying\r\n        to achieve the highest possible scoring hand. The next player must score\r\n        higher then the player in front of them, if the throwing player fails to\r\n        do that then they lose a life, but if the throwing player successfully\r\n        scores higer then they do not lose a life and the next player throws\r\n        their darts. Typically games are played with a defined number of\r\n        lives(we usually use 5). Game play continues until there is only one\r\n        player left with lives.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nconst KillerRules = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        <b>Game Play:</b> The game begins by players throwing darts into the\r\n        board with their hand opposite for throwing. (If I was right-handed, I\r\n        would use my left hand for this.) A players number is assigned with\r\n        whatever number you successfully hit (doubles and trebles are excluded\r\n        in this). Once all players have been &quot;assigned&quot; a number game\r\n        play will begin with the player with the lowest number and counting up.\r\n      </p>\r\n      <p>\r\n        <b>Scoring:</b> Players take turns shooting at their assigned numbers\r\n        (singles are 1, doubles are 2, trebles are 3), players gain lives\r\n        relative to the scoring. Once a player reaches 5 lives, they are\r\n        classified as a &quot;Killer&quot;, once a player becomes a killer they\r\n        begin then shooting towards other players numbers. If a player(s) is\r\n        unsuccessful in hitting their number prior to a player becoming a killer\r\n        they are eliminated from the game. There can be more then one killer at\r\n        a time, and game play continues until there is only one player\r\n        remaining.\r\n      </p>\r\n      <p>\r\n        <b>A few additional rules:</b> If a player has 4 lives and hits a double\r\n        of their number, they in fact do not become a killer but instead they\r\n        bring themself up to 5 then back down to 4 again. As such, if a player\r\n        is a killer and they strike their own number instead of another player\r\n        they bring their lives down equivilent to that score.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Rules;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\nimport useSessionStorage from \"../../util/useSessionStorage\";\r\n\r\nconst LoginUser = () => {\r\n  const { loginUser, isLoggedIn } = useUserAPI();\r\n\r\n  const [, setSessionUsername] = useSessionStorage(\"username\", \"\");\r\n  const [, setSessionUuidToken] = useSessionStorage(\"userUuid\", \"\");\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    loginUser({ username, password });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      setSessionUsername(username);\r\n      setAlert(true);\r\n    } else {\r\n      setSessionUsername(\"\");\r\n      setSessionUuidToken(\"\");\r\n    }\r\n    return () => {\r\n      setAlert(false);\r\n    };\r\n  }, [isLoggedIn, setSessionUsername, username, setSessionUuidToken]);\r\n\r\n  useEffect(() => {\r\n    if (alert) {\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 2000);\r\n    }\r\n  }, [alert]);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Log In\" goBackButton></Header>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"m-3\" controlId=\"username\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            value={username}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"m-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n        </Form.Group>\r\n        <Button type=\"submit\">Log In</Button>\r\n      </Form>\r\n      <p className=\"mt-5\">No account, no problem click here to register</p>\r\n      {alert && <h2>Login Successful</h2>}\r\n      <div className=\"mt-3\">\r\n        {isLoggedIn ? (\r\n          <Button as={Link} to=\"/dashboard\">\r\n            Continue\r\n          </Button>\r\n        ) : (\r\n          <Button as={Link} to=\"/game/register\">\r\n            Register\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginUser;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Header from \"../../components/Header\";\r\n\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\n\r\nconst UserRegistration = () => {\r\n  const { createUser, isLoggedIn } = useUserAPI();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const noPasswordMatch = password !== passwordConfirm;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (noPasswordMatch) {\r\n      return;\r\n    } else {\r\n      createUser({ username, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"User Registration\" goBackButton />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"m-3\" controlId=\"username\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n            value={username}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"m-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n            value={password}\r\n          />\r\n        </Form.Group>\r\n        {noPasswordMatch && (\r\n          <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n            Passwords must match\r\n          </p>\r\n        )}\r\n        <Form.Group className=\"m-3\" controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => {\r\n              setPasswordConfirm(e.target.value);\r\n            }}\r\n            value={passwordConfirm}\r\n          />\r\n        </Form.Group>\r\n        {isLoggedIn ? (\r\n          <Button variant=\"primary\" as={Link} to=\"/game/login\">\r\n            Continue to login\r\n          </Button>\r\n        ) : (\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRegistration;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nconst CreatePlayerDashboard = ({\r\n  playerName,\r\n  setPlayerName,\r\n  createPlayer,\r\n  userId,\r\n  getPlayerByUserId,\r\n}) => {\r\n  const onCreate = (userId, playerName) => {\r\n    createPlayer(playerName, userId);\r\n    setPlayerName(\"\");\r\n    setTimeout(() => {\r\n      getPlayerByUserId(userId);\r\n    }, 20);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Container className=\"mt-5 mb-5\" fluid>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col>\r\n              <input\r\n                type=\"text\"\r\n                name=\"playerName\"\r\n                placeholder=\"Player Name\"\r\n                onChange={(e) => {\r\n                  setPlayerName(e.target.value);\r\n                }}\r\n                value={playerName}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                onClick={() => {\r\n                  onCreate(userId, playerName);\r\n                }}\r\n              >\r\n                Add Player\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePlayerDashboard;\r\n\r\nCreatePlayerDashboard.propTypes = {\r\n  playerName: PropTypes.string,\r\n  setPlayerName: PropTypes.func,\r\n  createPlayer: PropTypes.func,\r\n  userId: PropTypes.string,\r\n  getPlayerByUserId: PropTypes.func,\r\n  userPlayerList: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\n\r\nconst CreateGameDashboard = ({ checkedPlayerList, setPlayerList }) => {\r\n  return (\r\n    <>\r\n      <Container className=\"m-3\">\r\n        <Button\r\n          as={Link}\r\n          to=\"/game/create\"\r\n          onClick={() => setPlayerList(checkedPlayerList)}\r\n        >\r\n          Create Game\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nCreateGameDashboard.propTypes = {\r\n  checkedPlayerList: PropTypes.array,\r\n  setPlayerList: PropTypes.func,\r\n};\r\n\r\nexport default CreateGameDashboard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { BsXSquare } from \"react-icons/bs\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nexport const EditPlayerName = ({\r\n  player,\r\n  setPlayerName,\r\n  isEditable,\r\n  playerName,\r\n}) => {\r\n  if (isEditable.status && isEditable.rowKey === player.id) {\r\n    return (\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          name=\"playerName\"\r\n          value={playerName || \"\"}\r\n          onChange={(e) => setPlayerName(e.target.value)}\r\n        />\r\n      </td>\r\n    );\r\n  } else {\r\n    return <td>{player.playerName}</td>;\r\n  }\r\n};\r\n\r\nEditPlayerName.propTypes = {\r\n  player: PropTypes.object,\r\n  setPlayerName: PropTypes.func,\r\n  isEditable: PropTypes.object,\r\n  playerName: PropTypes.string,\r\n};\r\n\r\nexport const EditPlayerButton = ({\r\n  isEditable,\r\n  player,\r\n  setEditable,\r\n  setPlayerName,\r\n  updatePlayerById,\r\n  getPlayerByUserId,\r\n  userId,\r\n  playerName,\r\n}) => {\r\n  const onEdit = ({ id, playerName }) => {\r\n    setEditable({ status: true, rowKey: id });\r\n    setPlayerName(playerName);\r\n  };\r\n\r\n  const onSave = (id, { playerName }) => {\r\n    updatePlayerById(id, { playerName });\r\n    setEditable({ status: false, rowKey: null });\r\n    setTimeout(() => {\r\n      getPlayerByUserId(userId);\r\n    });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setEditable({ status: false, rowKey: null });\r\n    setPlayerName(null);\r\n  };\r\n  if (isEditable.status && isEditable.rowKey === player.id) {\r\n    return (\r\n      <td>\r\n        <Button\r\n          className=\"mx-2\"\r\n          onClick={() =>\r\n            onSave(player.id, {\r\n              playerName: playerName,\r\n              users_id: player.users_id,\r\n            })\r\n          }\r\n        >\r\n          <BiEditAlt style={{ fontSize: 20 }} />\r\n        </Button>\r\n        <Button className=\"mx-1\" variant=\"danger\" onClick={() => onCancel()}>\r\n          <BsXSquare style={{ fontSize: 20 }} />\r\n        </Button>\r\n      </td>\r\n    );\r\n  } else {\r\n    return (\r\n      <td>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          onClick={() =>\r\n            onEdit({\r\n              id: player.id,\r\n              currentPlayerName: player.playerName,\r\n            })\r\n          }\r\n        >\r\n          <BiEditAlt style={{ fontSize: 20 }} />\r\n        </Button>\r\n      </td>\r\n    );\r\n  }\r\n};\r\n\r\nEditPlayerButton.propTypes = {\r\n  player: PropTypes.object,\r\n  isEditable: PropTypes.object,\r\n  setEditable: PropTypes.func,\r\n  setPlayerName: PropTypes.func,\r\n  updatePlayerById: PropTypes.func,\r\n  getPlayerByUserId: PropTypes.func,\r\n  userId: PropTypes.string,\r\n  playerName: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Modal, Row } from \"react-bootstrap\";\r\n\r\nimport { BsClipboardData } from \"react-icons/bs\";\r\n\r\nimport useStatsAPI from \"../../util/useStatsAPI\";\r\n\r\nconst DisplaySinglePlayerStats = ({ player }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const { getStatsForSinglePlayer, singlePlayerStats } = useStatsAPI();\r\n\r\n  const onFindStats = (playerid) => {\r\n    getStatsForSinglePlayer(playerid);\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"success\"\r\n        size=\"sm\"\r\n        onClick={() => {\r\n          onFindStats(player.id);\r\n        }}\r\n      >\r\n        <BsClipboardData style={{ fontSize: 20 }} />\r\n      </Button>\r\n      <Modal\r\n        show={show}\r\n        onHide={() => {\r\n          setShow(false);\r\n        }}\r\n        style={{ color: \"black\" }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{player.playerName}&apos;s Stats</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col>Games Played</Col>\r\n            <Col>Games Won</Col>\r\n            <Col>Win Percentage</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>{singlePlayerStats.gamesPlayed}</Col>\r\n            <Col>{singlePlayerStats.gamesWon}</Col>\r\n            <Col>{singlePlayerStats.winPercentage}</Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplaySinglePlayerStats;\r\n\r\nDisplaySinglePlayerStats.propTypes = {\r\n  player: PropTypes.object.isRequired,\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Table } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../../contexts/Provider\";\r\n\r\nimport { BsXSquare } from \"react-icons/bs\";\r\nimport { EditPlayerButton, EditPlayerName } from \"./EditPlayer\";\r\n\r\nimport DisplaySinglePlayerStats from \"./SinglePlayerStats\";\r\n\r\nconst dashboardTableHeader = [\r\n  \"Player Name\",\r\n  \"Select Player\",\r\n  \"Edit Player\",\r\n  \"Delete Player\",\r\n  \"Player Stats\",\r\n];\r\n\r\nconst SelectPlayersFromDB = ({\r\n  checkedPlayerList,\r\n  setCheckedPlayerList,\r\n  userPlayerList,\r\n  getPlayerByUserId,\r\n  deletePlayerById,\r\n  updatePlayerById,\r\n  userId,\r\n}) => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <>\r\n      <Table variant={theme} bordered striped>\r\n        <thead>\r\n          <tr>\r\n            {dashboardTableHeader.map((item, index) => {\r\n              return <th key={index}>{item}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <ShowDatabasePlayerList\r\n          checkedPlayerList={checkedPlayerList}\r\n          setCheckedPlayerList={setCheckedPlayerList}\r\n          userPlayerList={userPlayerList}\r\n          getPlayerByUserId={getPlayerByUserId}\r\n          deletePlayerById={deletePlayerById}\r\n          updatePlayerById={updatePlayerById}\r\n          userId={userId}\r\n        />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nSelectPlayersFromDB.propTypes = {\r\n  checkedPlayerList: PropTypes.array,\r\n  setCheckedPlayerList: PropTypes.func,\r\n  userPlayerList: PropTypes.array,\r\n  getPlayerByUserId: PropTypes.func,\r\n  deletePlayerById: PropTypes.func,\r\n  updatePlayerById: PropTypes.func,\r\n  userId: PropTypes.string,\r\n};\r\n\r\nexport default SelectPlayersFromDB;\r\n\r\nconst ShowDatabasePlayerList = ({\r\n  checkedPlayerList,\r\n  setCheckedPlayerList,\r\n  userPlayerList,\r\n  getPlayerByUserId,\r\n  deletePlayerById,\r\n  updatePlayerById,\r\n  userId,\r\n}) => {\r\n  const [isEditable, setEditable] = useState({ status: false, rowKey: null });\r\n  const [playerName, setPlayerName] = useState(null);\r\n\r\n  const onDelete = (id) => {\r\n    deletePlayerById(id);\r\n    setTimeout(() => {\r\n      getPlayerByUserId(userId);\r\n    });\r\n  };\r\n\r\n  const onPlayerCheckbox = (player) => {\r\n    setCheckedPlayerList([\r\n      ...checkedPlayerList,\r\n      {\r\n        id: player.id,\r\n        playerName: player.playerName,\r\n        score: player.score,\r\n        scoreList: player.scoreList,\r\n        lives: player.lives,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tbody>\r\n        {userPlayerList &&\r\n          userPlayerList.map((player) => {\r\n            return (\r\n              <tr key={player.id}>\r\n                <EditPlayerName\r\n                  player={player}\r\n                  setPlayerName={setPlayerName}\r\n                  isEditable={isEditable}\r\n                  playerName={playerName}\r\n                />\r\n                <td>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    onChange={(e) => {\r\n                      if (e.target.checked) {\r\n                        onPlayerCheckbox(player);\r\n                      } else {\r\n                        setCheckedPlayerList(\r\n                          checkedPlayerList.filter(\r\n                            (removePlayer) => removePlayer.id !== player.id\r\n                          )\r\n                        );\r\n                      }\r\n                    }}\r\n                    value={checkedPlayerList}\r\n                  />\r\n                </td>\r\n                <EditPlayerButton\r\n                  isEditable={isEditable}\r\n                  player={player}\r\n                  setEditable={setEditable}\r\n                  setPlayerName={setPlayerName}\r\n                  updatePlayerById={updatePlayerById}\r\n                  getPlayerByUserId={getPlayerByUserId}\r\n                  userId={userId}\r\n                  playerName={playerName}\r\n                />\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => onDelete(player.id)}\r\n                  >\r\n                    <BsXSquare style={{ fontSize: 20 }} />\r\n                  </Button>\r\n                </td>\r\n                <td>\r\n                  <DisplaySinglePlayerStats player={player} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </>\r\n  );\r\n};\r\n\r\nShowDatabasePlayerList.propTypes = {\r\n  playerName: PropTypes.string,\r\n  checkedPlayerList: PropTypes.array,\r\n  setCheckedPlayerList: PropTypes.func,\r\n  userPlayerList: PropTypes.array,\r\n  getPlayerByUserId: PropTypes.func,\r\n  deletePlayerById: PropTypes.func,\r\n  updatePlayerById: PropTypes.func,\r\n  userId: PropTypes.string,\r\n};\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport useStatsAPI from \"./useStatsAPI\";\r\n\r\nconst URL = \"http://localhost:8080/players/\";\r\n\r\nconst usePlayerAPI = () => {\r\n  const { createStatRowWithPlayer } = useStatsAPI();\r\n\r\n  const [userPlayerList, setUserPlayerList] = useState([]);\r\n\r\n  const createPlayer = (playerName, users_id) => {\r\n    axios\r\n      .post(`${URL}`, { playerName, users_id })\r\n      .then((res) => {\r\n        console.log(`Successfully created player: ${res.data.playerName}`);\r\n        createStatRowWithPlayer(res.data.id);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const getPlayerByUserId = (userId) => {\r\n    axios\r\n      .get(`${URL}${userId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const players = res.data;\r\n        const applyDatabasePlayers = players.map((player) => {\r\n          (player.score = 0), (player.lives = 0), (player.scoreList = []);\r\n          return player;\r\n        });\r\n        setUserPlayerList(applyDatabasePlayers);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const getPlayerByName = (playerName) => {\r\n    axios\r\n      .get(`${URL}byName/${playerName}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const updatePlayerById = (playerId, { playerName, users_id }) => {\r\n    axios\r\n      .put(`${URL}${playerId}`, { playerName, users_id })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const deletePlayerById = (playerId) => {\r\n    axios\r\n      .delete(`${URL}${playerId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  return {\r\n    createPlayer,\r\n    getPlayerByUserId,\r\n    updatePlayerById,\r\n    deletePlayerById,\r\n    userPlayerList,\r\n    setUserPlayerList,\r\n    getPlayerByName,\r\n  };\r\n};\r\n\r\nexport default usePlayerAPI;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  displaySessionUserUuidToken,\r\n  displaySessionUsername,\r\n} from \"../../util/useSessionStorage\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport LoginUser from \"./LogIn\";\r\nimport CreatePlayerDashboard from \"./CreatePlayerDashboard\";\r\nimport CreateGameDashboard from \"./CreateGameDashboard\";\r\nimport SelectPlayersFromDB from \"./ShowPlayersFromDB\";\r\n\r\nimport useGame from \"../../util/useGame\";\r\nimport usePlayerAPI from \"../../util/usePlayerAPI\";\r\n\r\nconst Dashboard = () => {\r\n  const username = displaySessionUsername();\r\n  const userId = displaySessionUserUuidToken();\r\n\r\n  const {\r\n    userPlayerList,\r\n    createPlayer,\r\n    getPlayerByUserId,\r\n    deletePlayerById,\r\n    updatePlayerById,\r\n  } = usePlayerAPI();\r\n\r\n  const { setPlayerList } = useGame();\r\n\r\n  const [playerName, setPlayerName] = useState(\"\");\r\n  const [checkedPlayerList, setCheckedPlayerList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPlayerByUserId(userId);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!username) {\r\n    return <LoginUser />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        title=\"Dashboard\"\r\n        username={username}\r\n        goBackButton\r\n        loginDropDown\r\n      />\r\n      <CreatePlayerDashboard\r\n        playerName={playerName}\r\n        setPlayerName={setPlayerName}\r\n        createPlayer={createPlayer}\r\n        userId={userId}\r\n        getPlayerByUserId={getPlayerByUserId}\r\n        userPlayerList={userPlayerList}\r\n      />\r\n      {checkedPlayerList.length >= 2 && (\r\n        <CreateGameDashboard\r\n          checkedPlayerList={checkedPlayerList}\r\n          setPlayerList={setPlayerList}\r\n        />\r\n      )}\r\n      <SelectPlayersFromDB\r\n        playerName={playerName}\r\n        checkedPlayerList={checkedPlayerList}\r\n        setCheckedPlayerList={setCheckedPlayerList}\r\n        userPlayerList={userPlayerList}\r\n        getPlayerByUserId={getPlayerByUserId}\r\n        deletePlayerById={deletePlayerById}\r\n        updatePlayerById={updatePlayerById}\r\n        userId={userId}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\nimport { displaySessionUserUuidToken } from \"../../util/useSessionStorage\";\r\n\r\nconst EditUserInfo = () => {\r\n  const userId = displaySessionUserUuidToken();\r\n\r\n  const { loginUser, updateUserById } = useUserAPI();\r\n\r\n  const [userCredentials, setUserCredentials] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [currentUserPassword, setCurrentUserPassword] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n\r\n  const noPasswordMatch = password !== passwordConfirm;\r\n\r\n  const handleSubmit = (userId, { username, password }) => {\r\n    updateUserById(userId, { username, password });\r\n    sessionStorage.setItem(\"username\", JSON.stringify(username));\r\n  };\r\n\r\n  const checkUserCredentials = (username, password) => {\r\n    loginUser({ username, password });\r\n    if (loginUser) {\r\n      setUserCredentials(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"m-3\" controlId=\"username\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n            }}\r\n            value={username}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"m-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Current Password\"\r\n            onChange={(e) => {\r\n              setCurrentUserPassword(e.target.value);\r\n            }}\r\n            value={currentUserPassword}\r\n          />\r\n        </Form.Group>\r\n\r\n        {userCredentials && (\r\n          <Form.Group className=\"m-3\" controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              onChange={(e) => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n        {noPasswordMatch && (\r\n          <p style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n            Passwords must match\r\n          </p>\r\n        )}\r\n        {userCredentials && (\r\n          <Form.Group className=\"m-3\" controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm New Password\"\r\n              onChange={(e) => {\r\n                setPasswordConfirm(e.target.value);\r\n              }}\r\n              value={passwordConfirm}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n        {userCredentials ? (\r\n          <Button\r\n            variant=\"primary\"\r\n            as={Link}\r\n            to=\"/dashboard\"\r\n            onClick={() => {\r\n              handleSubmit(userId, { username, password });\r\n            }}\r\n          >\r\n            Edit User Info\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              checkUserCredentials(username, currentUserPassword);\r\n            }}\r\n          >\r\n            Confirm Credentials\r\n          </Button>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditUserInfo;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useUserAPI from \"../../util/useUserAPI\";\r\nimport {\r\n  displaySessionUsername,\r\n  displaySessionUserUuidToken,\r\n} from \"../../util/useSessionStorage\";\r\n\r\nconst DeleteUser = () => {\r\n  const { deleteUserById } = useUserAPI();\r\n  const username = displaySessionUsername();\r\n  const userId = displaySessionUserUuidToken();\r\n\r\n  const handleDelete = (userId) => {\r\n    deleteUserById(userId);\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p>Are you sure you would like to delete {username}?</p>\r\n      <Button\r\n        as={Link}\r\n        to=\"/game/login\"\r\n        onClick={() => {\r\n          handleDelete(userId);\r\n        }}\r\n      >\r\n        Delete User\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteUser;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport CreatePlayerList from \"./screens/CreatePlayer\";\r\nimport {\r\n  CreateGame,\r\n  X01GameSelection,\r\n  EliminationSetUp,\r\n  KillerSetUp,\r\n} from \"./screens/CreateGame\";\r\nimport Cricket from \"./screens/games/Cricket\";\r\nimport Baseball from \"./screens/games/Baseball\";\r\nimport X01 from \"./screens/games/X01\";\r\nimport Elimination from \"./screens/games/Elimination\";\r\nimport Killer from \"./screens/games/Killer\";\r\nimport Rules from \"./screens/games/Rules\";\r\nimport LoginUser from \"./screens/dashboard/LogIn\";\r\nimport UserRegistration from \"./screens/dashboard/Register\";\r\nimport Dashboard from \"./screens/dashboard/Dashboard\";\r\nimport EditUserInfo from \"./screens/dashboard/EditUser\";\r\nimport DeleteUser from \"./screens/dashboard/DeleteUser\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Router basename=\"/dart-scoreboard\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/game/create\" component={CreateGame} />\r\n        <Route path=\"/create_player\" component={CreatePlayerList} />\r\n        <Route exact path=\"/game/cricket\" component={Cricket} />\r\n        <Route exact path=\"/game/baseball\" component={Baseball} />\r\n        <Route exact path=\"/game/x01\" component={X01} />\r\n        <Route exact path=\"/game/elimination\" component={Elimination} />\r\n        <Route exact path=\"/game/killer\" component={Killer} />\r\n        <Route path=\"/game/x01/create\" component={X01GameSelection} />\r\n        <Route path=\"/game/elimination/create\" component={EliminationSetUp} />\r\n        <Route path=\"/game/killer/create\" component={KillerSetUp} />\r\n        <Route path=\"/rules\" component={Rules} />\r\n        <Route path=\"/game/login\" component={LoginUser} />\r\n        <Route path=\"/game/register\" component={UserRegistration} />\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/user/edit\" component={EditUserInfo} />\r\n        <Route path=\"/user/delete\" component={DeleteUser} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\nimport { ThemeContext } from \"./Provider\";\r\n\r\nexport const themes = {\r\n  dark: {\r\n    body: \"#363537\",\r\n    text: \"#E2E2E2\",\r\n    toggleBorder: \"#6B8096\",\r\n    gradient: \"linear-gradient(#091236, #1E215D)\",\r\n  },\r\n  light: {\r\n    body: \"#E2E2E2\",\r\n    text: \"#363537\",\r\n    toggleBorder: \"#FFF\",\r\n    gradient: \"linear-gradient(#39598A, #79D7ED)\",\r\n  },\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n}`;\r\n\r\nconst Theme = ({ children }) => {\r\n  const { theme } = useContext(ThemeContext);\r\n  return (\r\n    <ThemeProvider theme={themes[theme]}>\r\n      <GlobalStyle />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nTheme.propTypes = { children: PropTypes.element };\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Routes from \"./Routes\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport Theme from \"./contexts/theme\";\r\n\r\nimport { ThemeProvider } from \"./contexts/Provider\";\r\nimport { PingProvider } from \"./contexts/PingProvider\";\r\n\r\nReactDOM.render(\r\n  <ThemeProvider>\r\n    <Theme>\r\n      <PingProvider>\r\n        <React.StrictMode>\r\n          <Routes />\r\n        </React.StrictMode>\r\n      </PingProvider>\r\n    </Theme>\r\n  </ThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}